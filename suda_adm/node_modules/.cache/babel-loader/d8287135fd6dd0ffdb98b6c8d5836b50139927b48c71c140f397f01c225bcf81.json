{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"MyRegister\",\n  data() {\n    // 提示的判断\n    const phone = (rule, value, callback) => {\n      if (value.toString().length !== 11 || typeof value !== 'number') {\n        return callback(new Error(\"请输入正确手机号\"));\n      }\n    };\n    const checkAge = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error('年龄不能为空'));\n      }\n      setTimeout(() => {\n        if (!Number.isInteger(value)) {\n          callback(new Error('请输入数字值'));\n        } else {\n          if (value < 18) {\n            callback(new Error('必须年满18岁'));\n          } else {\n            callback();\n          }\n        }\n      }, 1000);\n    };\n    const validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.userRegister.checkPass !== '') {\n          this.$refs.ruleForm.validateField('checkPass');\n        }\n        callback();\n      }\n    };\n    const validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.userRegister.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      radio: '1',\n      //存放用户注册信息\n      userRegister: {\n        sup: false\n      },\n      rules: {\n        pass: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          validator: validatePass2,\n          trigger: 'blur'\n        }],\n        age: [{\n          validator: checkAge,\n          trigger: 'blur'\n        }],\n        phone: [{\n          validator: phone,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    //注册提交\n    async registerUser() {\n      this.$set(this.userRegister, 'sup', false);\n      const res = await this.$http.post('register', this.userRegister); // eslint-disable-line no-unused-vars\n      this.$message({\n        type: 'success',\n        message: '注册成功'\n      });\n      //跳转登录页\n      await this.$router.push('/');\n    },\n    //获取单选框值\n    changeRadio(val) {\n      this.$set(this.userRegister, 'sex', '');\n      this.userRegister.sex = val;\n    },\n    //头像上传\n    handleAvatarSuccess(res) {\n      this.$set(this.userRegister, 'icon', res.url);\n      this.userRegister.icon = res.url;\n    },\n    // 上传头像提示\n    beforeAvatarUpload(file) {\n      const isJPG = file.type === 'image/jpeg';\n      const isLt2M = file.size / 1024 / 1024 < 2;\n      if (!isJPG) {\n        this.$message.error('上传头像图片只能是 JPG 格式!');\n      }\n      if (!isLt2M) {\n        this.$message.error('上传头像图片大小不能超过 2MB!');\n      }\n      return isJPG && isLt2M;\n    }\n  }\n};","map":{"version":3,"mappings":";AAkDA;EACAA;EACAC;IACA;IACA;MACA;QACA;MACA;IACA;IACA;MACA;QACA;MACA;MACAC;QACA;UACAC;QACA;UACA;YACAA;UACA;YACAA;UACA;QACA;MACA;IACA;IACA;MACA;QACAA;MACA;QACA;UACA;QACA;QACAA;MACA;IACA;IACA;MACA;QACAA;MACA;QACAA;MACA;QACAA;MACA;IACA;IACA;MACAC;MACA;MACAC;QACAC;MAEA;MACAC;QACAC,OACA;UAAAC;UAAAC;QAAA,EACA;QACAC,YACA;UAAAF;UAAAC;QAAA,EACA;QACAE,MACA;UAAAH;UAAAC;QAAA,EACA;QACAG,QACA;UAAAJ;UAAAC;QAAA;MAEA;IACA;EACA;EACAI;IACA;IACA;MACA;MACA;MACA;QACAC;QACAC;MACA;MACA;MACA;IACA;IACA;IACAC;MACA;MACA;IACA;IACA;IACAC;MACA;MACA;IACA;IACA;IACAC;MACA;MACA;MAEA;QACA;MACA;MACA;QACA;MACA;MACA;IACA;EAEA;AACA","names":["name","data","setTimeout","callback","radio","userRegister","sup","rules","pass","validator","trigger","checkPass","age","phone","methods","type","message","changeRadio","handleAvatarSuccess","beforeAvatarUpload"],"sourceRoot":"src/views/Login","sources":["MyRegister.vue"],"sourcesContent":["<template>\r\n  <div id=\"register\">\r\n    <div class=\"box\">\r\n      <!--      :rules=\"rules\"-->\r\n      <el-card class=\"box-card\">\r\n        <div slot=\"header\" class=\"clearfix\">\r\n          <span>注册</span>\r\n        </div>\r\n        <!--        注册用户信息表单-->\r\n        <el-form :model=\"userRegister\" :rules=\"rules\" ref=\"ruleForm\" @submit.native.prevent=\"registerUser\">\r\n          <el-form-item label=\"用户名:\" prop=\"name\">\r\n            <el-input v-model=\"userRegister.name\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"手机号:\" prop=\"phone\">\r\n            <el-input v-model.number=\"userRegister.phone\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"密码:\" prop=\"pass\">\r\n            <el-input type=\"password\" v-model=\"userRegister.password\" autocomplete=\"off\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"确认密码:\" prop=\"checkPass\">\r\n            <el-input type=\"password\" v-model=\"userRegister.checkPass\" autocomplete=\"off\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"年龄:\" prop=\"age\">\r\n            <el-input v-model.number=\"userRegister.age\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"性别:\" prop=\"sex\">\r\n            <el-radio v-model=\"radio\" label=\"女\" @change=\"changeRadio\">女</el-radio>\r\n            <el-radio v-model=\"radio\" label=\"男\" @change=\"changeRadio\">男</el-radio>\r\n          </el-form-item>\r\n          <el-form-item label=\"头像:\" prop=\"headPic\">\r\n            <el-upload\r\n                class=\"avatar-uploader\"\r\n                :action=\"$http.defaults.baseURL + '/upload'\"\r\n                :show-file-list=\"false\"\r\n                :on-success=\"handleAvatarSuccess\"\r\n                :before-upload=\"beforeAvatarUpload\">\r\n              <img v-if=\"userRegister.icon\" :src=\"userRegister.icon\" class=\"avatar\">\r\n              <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n            </el-upload>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" native-type=\"submit\">立即注册</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </el-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n\r\nexport default {\r\n  name: \"MyRegister\",\r\n  data() {\r\n    // 提示的判断\r\n    const phone = (rule, value, callback) => {\r\n      if (value.toString().length !== 11 || typeof value !== 'number'){\r\n         return callback(new Error(\"请输入正确手机号\"))\r\n      }\r\n    };\r\n    const checkAge = (rule, value, callback) => {\r\n      if (!value) {\r\n        return callback(new Error('年龄不能为空'));\r\n      }\r\n      setTimeout(() => {\r\n        if (!Number.isInteger(value)) {\r\n          callback(new Error('请输入数字值'));\r\n        } else {\r\n          if (value < 18) {\r\n            callback(new Error('必须年满18岁'));\r\n          } else {\r\n            callback();\r\n          }\r\n        }\r\n      }, 1000);\r\n    };\r\n    const validatePass = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请输入密码'));\r\n      } else {\r\n        if (this.userRegister.checkPass !== '') {\r\n          this.$refs.ruleForm.validateField('checkPass');\r\n        }\r\n        callback();\r\n      }\r\n    };\r\n    const validatePass2 = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请再次输入密码'));\r\n      } else if (value !== this.userRegister.password) {\r\n        callback(new Error('两次输入密码不一致!'));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      radio: '1',\r\n      //存放用户注册信息\r\n      userRegister: {\r\n        sup:false\r\n\r\n      },\r\n      rules: {\r\n        pass: [\r\n          {validator: validatePass, trigger: 'blur'}\r\n        ],\r\n        checkPass: [\r\n          {validator: validatePass2, trigger: 'blur'}\r\n        ],\r\n        age: [\r\n          {validator: checkAge, trigger: 'blur'}\r\n        ],\r\n        phone: [\r\n          {validator: phone, trigger: 'blur'}\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    //注册提交\r\n    async registerUser(){\r\n      this.$set(this.userRegister,'sup',false)\r\n      const res = await this.$http.post('register', this.userRegister)// eslint-disable-line no-unused-vars\r\n      this.$message({\r\n        type: 'success',\r\n        message: '注册成功',\r\n      })\r\n      //跳转登录页\r\n      await this.$router.push('/')\r\n    },\r\n    //获取单选框值\r\n    changeRadio(val) {\r\n      this.$set(this.userRegister,'sex','')\r\n      this.userRegister.sex = val\r\n    },\r\n    //头像上传\r\n    handleAvatarSuccess(res) {\r\n      this.$set(this.userRegister,'icon',res.url)\r\n      this.userRegister.icon = res.url\r\n    },\r\n    // 上传头像提示\r\n    beforeAvatarUpload(file) {\r\n      const isJPG = file.type === 'image/jpeg';\r\n      const isLt2M = file.size / 1024 / 1024 < 2;\r\n\r\n      if (!isJPG) {\r\n        this.$message.error('上传头像图片只能是 JPG 格式!');\r\n      }\r\n      if (!isLt2M) {\r\n        this.$message.error('上传头像图片大小不能超过 2MB!');\r\n      }\r\n      return isJPG && isLt2M;\r\n    },\r\n\r\n  },\r\n}\r\n</script>\r\n<style scoped>\r\n\r\n.box-card {\r\n  width: 40%;\r\n  margin: 0 auto;\r\n}\r\n\r\n.avatar-uploader .el-upload, i {\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.avatar-uploader .el-upload:hover {\r\n  border-color: #409EFF;\r\n}\r\n\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 178px;\r\n  height: 178px;\r\n  line-height: 178px;\r\n  text-align: center;\r\n}\r\n\r\n.avatar {\r\n  width: 178px;\r\n  height: 178px;\r\n  display: block;\r\n}\r\n\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}