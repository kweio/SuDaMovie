{"ast":null,"code":"// 引入登录验证组件\nimport SIdentify from \"@/components/SIdentify\";\nexport default {\n  name: \"MyLogin\",\n  data() {\n    return {\n      //-------------分割线--------------\n      // 密码登录部分\n      username: \"\",\n      //用户名\n      password: \"\",\n      //密码\n      passwordCode: \"\",\n      //输入的验证码\n      identifyCode: \"\",\n      //密码登录图形验证码\n      identifyCodes: \"1234567890abcdefghizklmnopqrstuvwxyz\" //生成图形验证码的依据\n    };\n  },\n\n  computed: {\n    //检查手机格式\n    checkPhone() {\n      return /^1[3|4|5|6|7|8][0-9]{9}$/.test(this.phone);\n    }\n  },\n  components: {\n    SIdentify\n  },\n  methods: {\n    // 登录按钮触发\n    async login() {\n      // 密码登录\n      if (!this.username) {\n        return this.$dialog.alert({\n          title: \"提示\",\n          message: \"请输入用户名\",\n          theme: \"round-button\",\n          confirmButtonColor: \"#7DA340\"\n        });\n      }\n      if (!this.password) {\n        return this.$dialog.alert({\n          title: \"提示\",\n          message: \"请输入密码\",\n          theme: \"round-button\",\n          confirmButtonColor: \"#7DA340\"\n        });\n      }\n      if (!this.passwordCode) {\n        return this.$dialog.alert({\n          title: \"提示\",\n          message: \"请输入验证码\",\n          theme: \"round-button\",\n          confirmButtonColor: \"#7DA340\"\n        });\n      }\n      if (this.passwordCode !== this.identifyCode) {\n        return this.$dialog.alert({\n          title: \"提示\",\n          message: \"请输入正确的验证码\",\n          theme: \"round-button\",\n          confirmButtonColor: \"#7DA340\"\n        });\n      }\n      // 验证通过,发送登录请求\n      // console.log(\"验证通过\");\n      const {\n        data\n      } = await this.$http.post(\"/pwdLogin\", {\n        name: this.username,\n        password: this.password\n      });\n      // 后台验证不通过，弹出错误信息\n      if (data.status !== \"Ok\") {\n        return this.$dialog.alert({\n          title: \"提示\",\n          message: data.message,\n          theme: \"round-button\",\n          confirmButtonColor: \"#7DA340\"\n        });\n      }\n      // 后台验证通过，登录成功\n      // console.log(data);\n      const {\n        WebToken,\n        message,\n        userId\n      } = data;\n      this.$toast({\n        type: \"success\",\n        message: message\n      });\n      window.localStorage.setItem(\"WebToken\", WebToken);\n      window.localStorage.setItem(\"userId\", userId);\n      const Path = window.localStorage.getItem(\"fromPath\");\n      setTimeout(() => {\n        this.$router.replace(Path || \"/mine\");\n      }, 1000);\n    },\n    // 密码登录验证码部分\n    // 刷新验证码\n    refreshIdentifyCode() {\n      this.identifyCode = \"\";\n      this.makeIdentifyCode(4);\n    },\n    // 生成l位数的随机验证码\n    makeIdentifyCode(l) {\n      for (let i = 0; i < l; i++) {\n        this.identifyCode += this.identifyCodes[this.randomNum(0, this.identifyCodes.length)];\n      }\n    },\n    // 生成单个验证码\n    randomNum(min, max) {\n      return Math.floor(Math.random() * (max - min) + min);\n    }\n  },\n  mounted() {\n    // 初始化验证码\n    this.identifyCode = \"\";\n    this.makeIdentifyCode(4);\n  }\n};","map":{"version":3,"mappings":"AAwFA;AACA;AAEA;EACAA;EACAC;IACA;MACA;MACA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;IACA;EACA;;EACAC;IACA;IACAC;MACA;IACA;EACA;EACAC;IAAAC;EAAA;EACAC;IACA;IACA;MACA;MACA;QACA;UACAC;UACAC;UACAC;UACAC;QACA;MACA;MACA;QACA;UACAH;UACAC;UACAC;UACAC;QACA;MACA;MACA;QACA;UACAH;UACAC;UACAC;UACAC;QACA;MACA;MACA;QACA;UACAH;UACAC;UACAC;UACAC;QACA;MACA;MACA;MACA;MACA;QAAAd;MAAA;QACAD;QACAG;MACA;MACA;MACA;QACA;UACAS;UACAC;UACAC;UACAC;QACA;MACA;MACA;MACA;MACA;QAAAC;QAAAH;QAAAI;MAAA;MACA;QACAC;QACAL;MACA;MACAM;MACAA;MACA;MACAC;QACA;MACA;IACA;IACA;IACA;IACAC;MACA;MACA;IACA;IACA;IACAC;MACA;QACA,qBACA;MACA;IACA;IACA;IACAC;MACA;IACA;EACA;EACAC;IACA;IACA;IACA;EACA;AACA","names":["name","data","username","password","passwordCode","identifyCode","identifyCodes","computed","checkPhone","components","SIdentify","methods","title","message","theme","confirmButtonColor","WebToken","userId","type","window","setTimeout","refreshIdentifyCode","makeIdentifyCode","randomNum","mounted"],"sourceRoot":"src/views/login","sources":["MyLogin.vue"],"sourcesContent":["<!--<template>-->\n<!--  <div class=\"login\">-->\n<!--    &lt;!&ndash;    <div class=\"header\">&ndash;&gt;-->\n<!--    &lt;!&ndash;&lt;!&ndash;      <van-icon name=\"cross\" @click.prevent=\"closePage\" />&ndash;&gt;&ndash;&gt;-->\n<!--    &lt;!&ndash;    </div>&ndash;&gt;-->\n<!--    &lt;!&ndash; 登录内容部分 &ndash;&gt;-->\n<!--    <div class=\"login-container\">-->\n<!--      <div class=\"eng-title\"><i>SuDa Movie</i></div>-->\n<!--      &lt;!&ndash; 登录部分 &ndash;&gt;-->\n<!--      <div class=\"login-main\">-->\n<!--        <el-form label-position=\"top\">-->\n<!--          <el-form-item label=\"用户名\" prop=\"username\">-->\n<!--            <el-input v-model=\"username\"></el-input>-->\n<!--          </el-form-item>-->\n<!--          <el-form-item label=\"密码\" prop=\"password\">-->\n<!--            <el-input type=\"password\" v-model=\"password\" autocomplete=\"off\"></el-input>-->\n<!--          </el-form-item>-->\n<!--          <el-form-item label=\"验证码\" >-->\n<!--            <el-input v-model=\"passwordCode\">-->\n<!--              <div @click.prevent=\"refreshIdentifyCode\" class=\"codeBtn\" slot=\"append\">-->\n<!--                <SIdentify :identifyCode=\"identifyCode\"></SIdentify>-->\n<!--              </div>-->\n<!--            </el-input>-->\n<!--            <div @click.prevent=\"refreshIdentifyCode\" class=\"codeBtn\" slot=\"append\">-->\n<!--              <SIdentify :identifyCode=\"identifyCode\"></SIdentify>-->\n<!--            </div>-->\n<!--          </el-form-item>-->\n<!--        </el-form>-->\n<!--        <div class=\"login-submit\">-->\n<!--          <button class=\"login-submit\"  @click.prevent=\"login\">登录</button>-->\n<!--        </div>-->\n\n<!--      </div>-->\n<!--    </div>-->\n<!--  </div>-->\n<!--</template>-->\n<template>\n  <div class=\"login\">\n    <div class=\"header\">\n      <van-icon name=\"cross\" @click.prevent=\"closePage\" />\n    </div>\n    <!-- 登录内容部分 -->\n    <div class=\"login-container\">\n      <!-- 登录头部部分 -->\n      <div class=\"login-header\">\n        <i class=\"eng-title\">dog Movie</i>\n      </div>\n      <!-- 登录内容部分 -->\n      <div class=\"login-content\">\n        <!-- 登录部分 -->\n        <div class=\"login-main\">\n          <form>\n            <!-- 密码登录部分 -->\n              <section class=\"login-info\">\n                <input\n                    type=\"text\"\n                    placeholder=\"请输入用户名\"\n                    v-model=\"username\"\n                />\n              </section>\n              <section class=\"login-info\">\n                <input\n                    type=\"password\"\n                    placeholder=\"请输入密码\"\n                    v-model=\"password\"\n                />\n              </section>\n              <section class=\"login-info\">\n                <!-- 验证码组件 -->\n                <input\n                    type=\"text\"\n                    placeholder=\"请输入验证码\"\n                    v-model=\"passwordCode\"\n                />\n                <div @click.prevent=\"refreshIdentifyCode\">\n                  <SIdentify :identifyCode=\"identifyCode\" class=\"codeBtn\">\n                  </SIdentify>\n                </div>\n              </section>\n\n            <button class=\"login-submit\" @click.prevent=\"login\">登录</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n// 引入登录验证组件\nimport SIdentify from \"@/components/SIdentify\";\n\nexport default {\n  name: \"MyLogin\",\n  data() {\n    return {\n      //-------------分割线--------------\n      // 密码登录部分\n      username: \"\", //用户名\n      password: \"\", //密码\n      passwordCode: \"\", //输入的验证码\n      identifyCode: \"\", //密码登录图形验证码\n      identifyCodes: \"1234567890abcdefghizklmnopqrstuvwxyz\", //生成图形验证码的依据\n    };\n  },\n  computed: {\n    //检查手机格式\n    checkPhone() {\n      return /^1[3|4|5|6|7|8][0-9]{9}$/.test(this.phone);\n    },\n  },\n  components: {SIdentify},\n  methods: {\n    // 登录按钮触发\n    async login() {\n      // 密码登录\n      if (!this.username) {\n        return this.$dialog.alert({\n          title: \"提示\",\n          message: \"请输入用户名\",\n          theme: \"round-button\",\n          confirmButtonColor: \"#7DA340\",\n        });\n      }\n      if (!this.password) {\n        return this.$dialog.alert({\n          title: \"提示\",\n          message: \"请输入密码\",\n          theme: \"round-button\",\n          confirmButtonColor: \"#7DA340\",\n        });\n      }\n      if (!this.passwordCode) {\n        return this.$dialog.alert({\n          title: \"提示\",\n          message: \"请输入验证码\",\n          theme: \"round-button\",\n          confirmButtonColor: \"#7DA340\",\n        });\n      }\n      if (this.passwordCode !== this.identifyCode) {\n        return this.$dialog.alert({\n          title: \"提示\",\n          message: \"请输入正确的验证码\",\n          theme: \"round-button\",\n          confirmButtonColor: \"#7DA340\",\n        });\n      }\n      // 验证通过,发送登录请求\n      // console.log(\"验证通过\");\n      const {data} = await this.$http.post(\"/pwdLogin\", {\n        name: this.username,\n        password: this.password,\n      });\n      // 后台验证不通过，弹出错误信息\n      if (data.status !== \"Ok\") {\n        return this.$dialog.alert({\n          title: \"提示\",\n          message: data.message,\n          theme: \"round-button\",\n          confirmButtonColor: \"#7DA340\",\n        });\n      }\n      // 后台验证通过，登录成功\n      // console.log(data);\n      const {WebToken, message, userId} = data;\n      this.$toast({\n        type: \"success\",\n        message: message,\n      });\n      window.localStorage.setItem(\"WebToken\", WebToken);\n      window.localStorage.setItem(\"userId\", userId);\n      const Path = window.localStorage.getItem(\"fromPath\");\n      setTimeout(() => {\n        this.$router.replace(Path || \"/mine\");\n      }, 1000);\n    },\n    // 密码登录验证码部分\n    // 刷新验证码\n    refreshIdentifyCode() {\n      this.identifyCode = \"\";\n      this.makeIdentifyCode(4);\n    },\n    // 生成l位数的随机验证码\n    makeIdentifyCode(l) {\n      for (let i = 0; i < l; i++) {\n        this.identifyCode +=\n            this.identifyCodes[this.randomNum(0, this.identifyCodes.length)];\n      }\n    },\n    // 生成单个验证码\n    randomNum(min, max) {\n      return Math.floor(Math.random() * (max - min) + min);\n    },\n  },\n  mounted() {\n    // 初始化验证码\n    this.identifyCode = \"\";\n    this.makeIdentifyCode(4);\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n/* 外部容器样式 */\n.login {\n  width: 100vw;\n  height: 100vh;\n  /* 渐变背景 */\n  background: linear-gradient(125deg, #ffbe32, #b3fffa, #b6f597, #fdff79);\n  /* 指定背景图像的大小 */\n  background-size: 500%;\n  /* 执行动画：动画名 时长 线性的 无限次播放 */\n  animation: bgAnimation 15s linear infinite;\n}\n/* 定义动画 */\n@keyframes bgAnimation {\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n}\n// 顶部返回栏\n.header {\n  height: 3.8462rem;\n  display: flex;\n  align-items: center;\n  font-size: 2rem;\n  padding: 0 0.7692rem;\n}\n// 登录内容部分\n.login-container {\n  margin-top: 1.5385rem;\n  // 登录头部部分\n  .login-header {\n    font-size: 1.5385rem;\n    color: #fa209f;\n    span {\n      font-size: 7.6923rem;\n    }\n  }\n  // 登录内容部分\n  .login-content {\n    // 登录类型\n    .login-type {\n      margin: 1.5385rem 0;\n      font-size: 1.1538rem;\n      font-weight: 700;\n      span {\n        padding: 0.3846rem 0;\n        margin: 0 1.1538rem;\n      }\n    }\n    // 登录部分\n    .login-main {\n      padding: 0.7692rem 3.0769rem;\n      // 1.手机验证码登录与密码登录部分\n      // 这俩部分样式都一样\n      .login-info {\n        position: relative;\n        width: 100%;\n        height: 3.0769rem;\n        input {\n          width: 100%;\n          height: 100%;\n          //border: none;\n          border-radius: 0.3846rem;\n          padding: 0 1em;\n          font-size: 1.0769rem;\n          box-sizing: border-box;\n          border: 0.0769rem solid transparent;\n        }\n        input:focus {\n          border: 0.0769rem solid #fa209f;\n        }\n        // 验证码按钮样式\n        .codeBtn {\n          position: absolute;\n          right: 0.7692rem;\n          color: rgb(150, 150, 150);\n          border: none;\n          padding: 0.3846rem;\n          background: transparent;\n          top: 50%;\n          transform: translate(0, -50%);\n        }\n      }\n      .login-phone {\n        height: 11.5385rem;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-around;\n        // 提示部分样式\n        .login-tip {\n          text-align: justify;\n          color: rgb(150, 150, 150);\n          a {\n            color: #fa209f;\n          }\n        }\n      }\n      // 登录按钮部分\n      .login-submit {\n        margin-top: 0.7692rem;\n        width: 100%;\n        font-size: 1.2308rem;\n        padding: 1.1538rem 0;\n        color: #fff;\n        background-color: #fa209f;\n        border: none;\n        border-radius: 0.3846rem;\n      }\n    }\n  }\n}\n// 登录类型选中样式\n.active-login-type {\n  color: #fa209f;\n  border-bottom: 0.3846rem solid #fa209f;\n  border-radius: 0.3846rem;\n}\n// 手机号检测成功获取验证码文字颜色\n.active-code {\n  color: #fa209f !important;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}