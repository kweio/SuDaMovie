{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\nconst ipc = require('@achrinza/node-ipc');\nconst DEFAULT_ID = process.env.VUE_CLI_IPC || 'vue-cli';\nconst DEFAULT_IDLE_TIMEOUT = 3000;\nconst DEFAULT_OPTIONS = {\n  networkId: DEFAULT_ID,\n  autoConnect: true,\n  disconnectOnIdle: false,\n  idleTimeout: DEFAULT_IDLE_TIMEOUT,\n  namespaceOnProject: true\n};\nconst PROJECT_ID = process.env.VUE_CLI_PROJECT_ID;\nexports.IpcMessenger = class IpcMessenger {\n  constructor(options = {}) {\n    options = Object.assign({}, DEFAULT_OPTIONS, options);\n    ipc.config.id = this.id = options.networkId;\n    ipc.config.retry = 1500;\n    ipc.config.silent = true;\n    this.connected = false;\n    this.connecting = false;\n    this.disconnecting = false;\n    this.queue = null;\n    this.options = options;\n    this.listeners = [];\n    this.disconnectTimeout = 15000;\n    this.idleTimer = null;\n\n    // Prevent forced process exit\n    // (or else ipc messages may not be sent before kill)\n    process.exit = code => {\n      process.exitCode = code;\n    };\n    this._reset();\n  }\n  checkConnection() {\n    if (!ipc.of[this.id]) {\n      this.connected = false;\n    }\n  }\n  send(data, type = 'message') {\n    this.checkConnection();\n    if (this.connected) {\n      if (this.options.namespaceOnProject && PROJECT_ID) {\n        data = {\n          _projectId: PROJECT_ID,\n          _data: data\n        };\n      }\n      ipc.of[this.id].emit(type, data);\n      clearTimeout(this.idleTimer);\n      if (this.options.disconnectOnIdle) {\n        this.idleTimer = setTimeout(() => {\n          this.disconnect();\n        }, this.options.idleTimeout);\n      }\n    } else {\n      this.queue.push(data);\n      if (this.options.autoConnect && !this.connecting) {\n        this.connect();\n      }\n    }\n  }\n  connect() {\n    this.checkConnection();\n    if (this.connected || this.connecting) return;\n    this.connecting = true;\n    this.disconnecting = false;\n    ipc.connectTo(this.id, () => {\n      this.connected = true;\n      this.connecting = false;\n      this.queue && this.queue.forEach(data => this.send(data));\n      this.queue = null;\n      ipc.of[this.id].on('message', this._onMessage);\n    });\n  }\n  disconnect() {\n    this.checkConnection();\n    if (!this.connected || this.disconnecting) return;\n    this.disconnecting = true;\n    this.connecting = false;\n    const ipcTimer = setTimeout(() => {\n      this._disconnect();\n    }, this.disconnectTimeout);\n    this.send({\n      done: true\n    }, 'ack');\n    ipc.of[this.id].on('ack', data => {\n      if (data.ok) {\n        clearTimeout(ipcTimer);\n        this._disconnect();\n      }\n    });\n  }\n  on(listener) {\n    this.listeners.push(listener);\n  }\n  off(listener) {\n    const index = this.listeners.indexOf(listener);\n    if (index !== -1) this.listeners.splice(index, 1);\n  }\n  _reset() {\n    this.queue = [];\n    this.connected = false;\n  }\n  _disconnect() {\n    this.connected = false;\n    this.disconnecting = false;\n    ipc.disconnect(this.id);\n    this._reset();\n  }\n  _onMessage(data) {\n    this.listeners.forEach(fn => {\n      if (this.options.namespaceOnProject && data._projectId) {\n        if (data._projectId === PROJECT_ID) {\n          data = data._data;\n        } else {\n          return;\n        }\n      }\n      fn(data);\n    });\n  }\n};","map":{"version":3,"names":["ipc","require","DEFAULT_ID","process","env","VUE_CLI_IPC","DEFAULT_IDLE_TIMEOUT","DEFAULT_OPTIONS","networkId","autoConnect","disconnectOnIdle","idleTimeout","namespaceOnProject","PROJECT_ID","VUE_CLI_PROJECT_ID","exports","IpcMessenger","constructor","options","Object","assign","config","id","retry","silent","connected","connecting","disconnecting","queue","listeners","disconnectTimeout","idleTimer","exit","code","exitCode","_reset","checkConnection","of","send","data","type","_projectId","_data","emit","clearTimeout","setTimeout","disconnect","push","connect","connectTo","forEach","on","_onMessage","ipcTimer","_disconnect","done","ok","listener","off","index","indexOf","splice","fn"],"sources":["D:/WebSpace/SuDaMovie/suda/node_modules/@vue/cli-shared-utils/lib/ipc.js"],"sourcesContent":["const ipc = require('@achrinza/node-ipc')\n\nconst DEFAULT_ID = process.env.VUE_CLI_IPC || 'vue-cli'\nconst DEFAULT_IDLE_TIMEOUT = 3000\nconst DEFAULT_OPTIONS = {\n  networkId: DEFAULT_ID,\n  autoConnect: true,\n  disconnectOnIdle: false,\n  idleTimeout: DEFAULT_IDLE_TIMEOUT,\n  namespaceOnProject: true\n}\n\nconst PROJECT_ID = process.env.VUE_CLI_PROJECT_ID\n\nexports.IpcMessenger = class IpcMessenger {\n  constructor (options = {}) {\n    options = Object.assign({}, DEFAULT_OPTIONS, options)\n    ipc.config.id = this.id = options.networkId\n    ipc.config.retry = 1500\n    ipc.config.silent = true\n\n    this.connected = false\n    this.connecting = false\n    this.disconnecting = false\n    this.queue = null\n    this.options = options\n\n    this.listeners = []\n\n    this.disconnectTimeout = 15000\n    this.idleTimer = null\n\n    // Prevent forced process exit\n    // (or else ipc messages may not be sent before kill)\n    process.exit = code => {\n      process.exitCode = code\n    }\n\n    this._reset()\n  }\n\n  checkConnection () {\n    if (!ipc.of[this.id]) {\n      this.connected = false\n    }\n  }\n\n  send (data, type = 'message') {\n    this.checkConnection()\n    if (this.connected) {\n      if (this.options.namespaceOnProject && PROJECT_ID) {\n        data = {\n          _projectId: PROJECT_ID,\n          _data: data\n        }\n      }\n\n      ipc.of[this.id].emit(type, data)\n\n      clearTimeout(this.idleTimer)\n      if (this.options.disconnectOnIdle) {\n        this.idleTimer = setTimeout(() => {\n          this.disconnect()\n        }, this.options.idleTimeout)\n      }\n    } else {\n      this.queue.push(data)\n      if (this.options.autoConnect && !this.connecting) {\n        this.connect()\n      }\n    }\n  }\n\n  connect () {\n    this.checkConnection()\n    if (this.connected || this.connecting) return\n    this.connecting = true\n    this.disconnecting = false\n    ipc.connectTo(this.id, () => {\n      this.connected = true\n      this.connecting = false\n      this.queue && this.queue.forEach(data => this.send(data))\n      this.queue = null\n\n      ipc.of[this.id].on('message', this._onMessage)\n    })\n  }\n\n  disconnect () {\n    this.checkConnection()\n    if (!this.connected || this.disconnecting) return\n    this.disconnecting = true\n    this.connecting = false\n\n    const ipcTimer = setTimeout(() => {\n      this._disconnect()\n    }, this.disconnectTimeout)\n\n    this.send({ done: true }, 'ack')\n\n    ipc.of[this.id].on('ack', data => {\n      if (data.ok) {\n        clearTimeout(ipcTimer)\n        this._disconnect()\n      }\n    })\n  }\n\n  on (listener) {\n    this.listeners.push(listener)\n  }\n\n  off (listener) {\n    const index = this.listeners.indexOf(listener)\n    if (index !== -1) this.listeners.splice(index, 1)\n  }\n\n  _reset () {\n    this.queue = []\n    this.connected = false\n  }\n\n  _disconnect () {\n    this.connected = false\n    this.disconnecting = false\n    ipc.disconnect(this.id)\n    this._reset()\n  }\n\n  _onMessage (data) {\n    this.listeners.forEach(fn => {\n      if (this.options.namespaceOnProject && data._projectId) {\n        if (data._projectId === PROJECT_ID) {\n          data = data._data\n        } else {\n          return\n        }\n      }\n      fn(data)\n    })\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}