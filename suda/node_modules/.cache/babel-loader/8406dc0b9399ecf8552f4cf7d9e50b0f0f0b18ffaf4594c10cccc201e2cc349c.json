{"ast":null,"code":"// 引入登录验证组件\nimport SIdentify from \"@/components/SIdentify\";\nexport default {\n  name: \"MyLogin\",\n  data() {\n    return {\n      loginType: true,\n      // 登录类型\n      //-------------分割线--------------\n      // 验证登录部分\n      phone: \"\",\n      // 手机号\n      phoneCode: \"\",\n      // 输入的手机验证码\n      phoneIdentifyCode: \"\",\n      //生成的手机验证码\n      phoneIdentifyCodes: \"1234567890\",\n      //生成手机验证码的依据\n      countDown: 0,\n      //倒计时,获取验证码与重新获取验证码切换状态\n      //-------------分割线--------------\n      // 密码登录部分\n      username: \"\",\n      //用户名\n      password: \"\",\n      //密码\n      passwordCode: \"\",\n      //输入的验证码\n      identifyCode: \"\",\n      //密码登录图形验证码\n      identifyCodes: \"1234567890abcdefghizklmnopqrstuvwxyz\" //生成图形验证码的依据\n    };\n  },\n\n  computed: {\n    //检查手机格式\n    checkPhone() {\n      return /^1[3|4|5|6|7|8][0-9]{9}$/.test(this.phone);\n    }\n  },\n  components: {\n    SIdentify\n  },\n  methods: {\n    //选择登录类型\n    // changeLoginType(str) {\n    //   if (str === \"验证码\") {\n    //     return (this.loginType = true);\n    //   }\n    //   this.loginType = false;\n    // },\n    // 登录按钮触发\n    async login() {\n      // 判断是验证码登录还是密码登录\n      if (this.loginType) {\n        // 验证码登录\n        // 先进行表单验证\n        if (!this.phone) {\n          return this.$dialog.alert({\n            title: \"提示\",\n            message: \"请输入手机号码\",\n            theme: \"round-button\",\n            confirmButtonColor: \"#fa209f\"\n          });\n        }\n        if (!this.checkPhone) {\n          return this.$dialog.alert({\n            title: \"提示\",\n            message: \"请输入正确格式的手机号码\",\n            theme: \"round-button\",\n            confirmButtonColor: \"#fa209f\"\n          });\n        }\n        if (!this.phoneCode) {\n          return this.$dialog.alert({\n            title: \"提示\",\n            message: \"请输入验证码\",\n            theme: \"round-button\",\n            confirmButtonColor: \"#fa209f\"\n          });\n        }\n        if (this.phoneCode !== this.phoneIdentifyCode) {\n          return this.$dialog.alert({\n            title: \"提示\",\n            message: \"请输入正确的验证码\",\n            theme: \"round-button\",\n            confirmButtonColor: \"#fa209f\"\n          });\n        }\n        // 验证通过,发送登录或注册请求\n        // console.log(\"验证通过\");\n        const {\n          data\n        } = await this.$http.post(\"/phoneLogin\", {\n          phone: this.phone\n        });\n        // 后台验证不通过，弹出错误信息\n        if (data.status !== \"Ok\") {\n          return this.$dialog.alert({\n            title: \"提示\",\n            message: data.message,\n            theme: \"round-button\",\n            confirmButtonColor: \"#fa209f\"\n          });\n        }\n        // 后台验证通过，登录成功\n        const {\n          WebToken,\n          message,\n          userId\n        } = data;\n        this.$toast({\n          type: \"success\",\n          message: message\n        });\n        window.localStorage.setItem(\"WebToken\", WebToken);\n        window.localStorage.setItem(\"userId\", userId);\n        const Path = window.localStorage.getItem(\"fromPath\");\n        setTimeout(() => {\n          this.$router.replace(Path || \"/mine\");\n        }, 1000);\n      } else {\n        // 密码登录\n        if (!this.username) {\n          return this.$dialog.alert({\n            title: \"提示\",\n            message: \"请输入用户名\",\n            theme: \"round-button\",\n            confirmButtonColor: \"#fa209f\"\n          });\n        }\n        if (!this.password) {\n          return this.$dialog.alert({\n            title: \"提示\",\n            message: \"请输入密码\",\n            theme: \"round-button\",\n            confirmButtonColor: \"#fa209f\"\n          });\n        }\n        if (!this.passwordCode) {\n          return this.$dialog.alert({\n            title: \"提示\",\n            message: \"请输入验证码\",\n            theme: \"round-button\",\n            confirmButtonColor: \"#fa209f\"\n          });\n        }\n        if (this.passwordCode !== this.identifyCode) {\n          return this.$dialog.alert({\n            title: \"提示\",\n            message: \"请输入正确的验证码\",\n            theme: \"round-button\",\n            confirmButtonColor: \"#fa209f\"\n          });\n        }\n        // 验证通过,发送登录请求\n        // console.log(\"验证通过\");\n        const {\n          data\n        } = await this.$http.post(\"/pwdLogin\", {\n          name: this.username,\n          password: this.password\n        });\n        // 后台验证不通过，弹出错误信息\n        if (data.status !== \"Ok\") {\n          return this.$dialog.alert({\n            title: \"提示\",\n            message: data.message,\n            theme: \"round-button\",\n            confirmButtonColor: \"#fa209f\"\n          });\n        }\n        // 后台验证通过，登录成功\n        // console.log(data);\n        const {\n          WebToken,\n          message,\n          userId\n        } = data;\n        this.$toast({\n          type: \"success\",\n          message: message\n        });\n        window.localStorage.setItem(\"WebToken\", WebToken);\n        window.localStorage.setItem(\"userId\", userId);\n        const Path = window.localStorage.getItem(\"fromPath\");\n        setTimeout(() => {\n          this.$router.replace(Path || \"/mine\");\n        }, 1000);\n      }\n    },\n    // 验证码登录验证码部分\n    // 点击获取验证码触发\n    // getValidateCode() {\n    //   // 计时中无法触发函数\n    //   if (this.countDown !== 0) {\n    //     return;\n    //   }\n    //   // 先判断手机号是否输入正确\n    //   if (!this.checkPhone) {\n    //     return this.$dialog.alert({\n    //       title: \"提示\",\n    //       message: \"请输入正确格式的手机号\",\n    //       theme: \"round-button\",\n    //       confirmButtonColor: \"#fa209f\",\n    //     });\n    //   }\n    //   this.countDown = 10;\n    //   // 计时10秒\n    //   let timer = setInterval(() => {\n    //     this.countDown--;\n    //     if (this.countDown === 0) {\n    //       clearInterval(timer);\n    //     }\n    //   }, 1000);\n    //   // 在每次获取时清空上次获取的验证码值\n    //   this.phoneIdentifyCode = \"\";\n    //   // 获取验证码\n    //   this.makePhoneIdentifyCode(4);\n    //   this.$dialog.alert({\n    //     title: \"提示\",\n    //     message: `手机验证码为:${this.phoneIdentifyCode}`,\n    //     theme: \"round-button\",\n    //     confirmButtonColor: \"#fa209f\",\n    //   });\n    //   // console.log(this.phoneIdentifyCode);\n    // },\n    // 生成l位数的随机验证码\n    makePhoneIdentifyCode(l) {\n      for (let i = 0; i < l; i++) {\n        this.phoneIdentifyCode += this.phoneIdentifyCodes[this.randomNum(0, this.phoneIdentifyCodes.length)];\n      }\n    },\n    // 密码登录验证码部分\n    // 刷新验证码\n    refreshIdentifyCode() {\n      this.identifyCode = \"\";\n      this.makeIdentifyCode(4);\n    },\n    // 生成l位数的随机验证码\n    makeIdentifyCode(l) {\n      for (let i = 0; i < l; i++) {\n        this.identifyCode += this.identifyCodes[this.randomNum(0, this.identifyCodes.length)];\n      }\n    },\n    // 生成单个验证码\n    randomNum(min, max) {\n      return Math.floor(Math.random() * (max - min) + min);\n    }\n    // 点击左上角×触发\n  },\n\n  mounted() {\n    // 初始化验证码\n    this.identifyCode = \"\";\n    this.makeIdentifyCode(4);\n  }\n};","map":{"version":3,"mappings":"AAsCA;AACA;AAEA;EACAA;EACAC;IACA;MACAC;MAAA;MACA;MACA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACA;MACA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;IACA;EACA;;EACAC;IACA;IACAC;MACA;IACA;EACA;EACAC;IAAAC;EAAA;EACAC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MACA;MACA;QACA;QACA;QACA;UACA;YACAC;YACAC;YACAC;YACAC;UACA;QACA;QACA;UACA;YACAH;YACAC;YACAC;YACAC;UACA;QACA;QACA;UACA;YACAH;YACAC;YACAC;YACAC;UACA;QACA;QACA;UACA;YACAH;YACAC;YACAC;YACAC;UACA;QACA;QACA;QACA;QACA;UAAApB;QAAA;UACAE;QACA;QACA;QACA;UACA;YACAe;YACAC;YACAC;YACAC;UACA;QACA;QACA;QACA;UAAAC;UAAAH;UAAAI;QAAA;QACA;UACAC;UACAL;QACA;QACAM;QACAA;QACA;QACAC;UACA;QACA;MACA;QACA;QACA;UACA;YACAR;YACAC;YACAC;YACAC;UACA;QACA;QACA;UACA;YACAH;YACAC;YACAC;YACAC;UACA;QACA;QACA;UACA;YACAH;YACAC;YACAC;YACAC;UACA;QACA;QACA;UACA;YACAH;YACAC;YACAC;YACAC;UACA;QACA;QACA;QACA;QACA;UAAApB;QAAA;UACAD;UACAS;QACA;QACA;QACA;UACA;YACAS;YACAC;YACAC;YACAC;UACA;QACA;QACA;QACA;QACA;UAAAC;UAAAH;UAAAI;QAAA;QACA;UACAC;UACAL;QACA;QACAM;QACAA;QACA;QACAC;UACA;QACA;MACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAC;MACA;QACA,0BACA,wBACA,kDACA;MACA;IACA;IACA;IACA;IACAC;MACA;MACA;IACA;IACA;IACAC;MACA;QACA,qBACA;MACA;IACA;IACA;IACAC;MACA;IACA;IACA;EACA;;EACAC;IACA;IACA;IACA;EACA;AACA","names":["name","data","loginType","phone","phoneCode","phoneIdentifyCode","phoneIdentifyCodes","countDown","username","password","passwordCode","identifyCode","identifyCodes","computed","checkPhone","components","SIdentify","methods","title","message","theme","confirmButtonColor","WebToken","userId","type","window","setTimeout","makePhoneIdentifyCode","refreshIdentifyCode","makeIdentifyCode","randomNum","mounted"],"sourceRoot":"src/views/login","sources":["MyLogin.vue"],"sourcesContent":["<template>\n  <div class=\"login\">\n    <!--    <div class=\"header\">-->\n    <!--&lt;!&ndash;      <van-icon name=\"cross\" @click.prevent=\"closePage\" />&ndash;&gt;-->\n    <!--    </div>-->\n    <!-- 登录内容部分 -->\n    <div class=\"login-container\">\n      <div class=\"eng-title\"><i>SuDa Movie</i></div>\n      <!-- 登录部分 -->\n      <div class=\"login-main\">\n        <el-form label-position=\"top\">\n          <el-form-item label=\"用户名\" prop=\"username\">\n            <section class=\"login-info\">\n              <el-input v-model=\"username\"></el-input>\n            </section>\n          </el-form-item>\n          <el-form-item label=\"密码\" prop=\"password\">\n            <section class=\"login-info\">\n              <el-input type=\"password\" v-model=\"password\" autocomplete=\"off\"></el-input>\n            </section>\n          </el-form-item>\n          <el-form-item label=\"验证码\">\n            <section class=\"login-info\">\n              <el-input v-model=\"passwordCode\">\n                <div @click.prevent=\"refreshIdentifyCode\" slot=\"append\">\n                  <SIdentify :identifyCode=\"identifyCode\" class=\"codeBtn\"></SIdentify>\n                </div>\n              </el-input>\n            </section>\n          </el-form-item>\n          <el-button type=\"primary\" class=\"login-submit\" @click.prevent=\"login\">主要按钮</el-button>\n        </el-form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n// 引入登录验证组件\nimport SIdentify from \"@/components/SIdentify\";\n\nexport default {\n  name: \"MyLogin\",\n  data() {\n    return {\n      loginType: true, // 登录类型\n      //-------------分割线--------------\n      // 验证登录部分\n      phone: \"\", // 手机号\n      phoneCode: \"\", // 输入的手机验证码\n      phoneIdentifyCode: \"\", //生成的手机验证码\n      phoneIdentifyCodes: \"1234567890\", //生成手机验证码的依据\n      countDown: 0, //倒计时,获取验证码与重新获取验证码切换状态\n      //-------------分割线--------------\n      // 密码登录部分\n      username: \"\", //用户名\n      password: \"\", //密码\n      passwordCode: \"\", //输入的验证码\n      identifyCode: \"\", //密码登录图形验证码\n      identifyCodes: \"1234567890abcdefghizklmnopqrstuvwxyz\", //生成图形验证码的依据\n    };\n  },\n  computed: {\n    //检查手机格式\n    checkPhone() {\n      return /^1[3|4|5|6|7|8][0-9]{9}$/.test(this.phone);\n    },\n  },\n  components: {SIdentify},\n  methods: {\n    //选择登录类型\n    // changeLoginType(str) {\n    //   if (str === \"验证码\") {\n    //     return (this.loginType = true);\n    //   }\n    //   this.loginType = false;\n    // },\n    // 登录按钮触发\n    async login() {\n      // 判断是验证码登录还是密码登录\n      if (this.loginType) {\n        // 验证码登录\n        // 先进行表单验证\n        if (!this.phone) {\n          return this.$dialog.alert({\n            title: \"提示\",\n            message: \"请输入手机号码\",\n            theme: \"round-button\",\n            confirmButtonColor: \"#fa209f\",\n          });\n        }\n        if (!this.checkPhone) {\n          return this.$dialog.alert({\n            title: \"提示\",\n            message: \"请输入正确格式的手机号码\",\n            theme: \"round-button\",\n            confirmButtonColor: \"#fa209f\",\n          });\n        }\n        if (!this.phoneCode) {\n          return this.$dialog.alert({\n            title: \"提示\",\n            message: \"请输入验证码\",\n            theme: \"round-button\",\n            confirmButtonColor: \"#fa209f\",\n          });\n        }\n        if (this.phoneCode !== this.phoneIdentifyCode) {\n          return this.$dialog.alert({\n            title: \"提示\",\n            message: \"请输入正确的验证码\",\n            theme: \"round-button\",\n            confirmButtonColor: \"#fa209f\",\n          });\n        }\n        // 验证通过,发送登录或注册请求\n        // console.log(\"验证通过\");\n        const {data} = await this.$http.post(\"/phoneLogin\", {\n          phone: this.phone,\n        });\n        // 后台验证不通过，弹出错误信息\n        if (data.status !== \"Ok\") {\n          return this.$dialog.alert({\n            title: \"提示\",\n            message: data.message,\n            theme: \"round-button\",\n            confirmButtonColor: \"#fa209f\",\n          });\n        }\n        // 后台验证通过，登录成功\n        const {WebToken, message, userId} = data;\n        this.$toast({\n          type: \"success\",\n          message: message,\n        });\n        window.localStorage.setItem(\"WebToken\", WebToken);\n        window.localStorage.setItem(\"userId\", userId);\n        const Path = window.localStorage.getItem(\"fromPath\");\n        setTimeout(() => {\n          this.$router.replace(Path || \"/mine\");\n        }, 1000);\n      } else {\n        // 密码登录\n        if (!this.username) {\n          return this.$dialog.alert({\n            title: \"提示\",\n            message: \"请输入用户名\",\n            theme: \"round-button\",\n            confirmButtonColor: \"#fa209f\",\n          });\n        }\n        if (!this.password) {\n          return this.$dialog.alert({\n            title: \"提示\",\n            message: \"请输入密码\",\n            theme: \"round-button\",\n            confirmButtonColor: \"#fa209f\",\n          });\n        }\n        if (!this.passwordCode) {\n          return this.$dialog.alert({\n            title: \"提示\",\n            message: \"请输入验证码\",\n            theme: \"round-button\",\n            confirmButtonColor: \"#fa209f\",\n          });\n        }\n        if (this.passwordCode !== this.identifyCode) {\n          return this.$dialog.alert({\n            title: \"提示\",\n            message: \"请输入正确的验证码\",\n            theme: \"round-button\",\n            confirmButtonColor: \"#fa209f\",\n          });\n        }\n        // 验证通过,发送登录请求\n        // console.log(\"验证通过\");\n        const {data} = await this.$http.post(\"/pwdLogin\", {\n          name: this.username,\n          password: this.password,\n        });\n        // 后台验证不通过，弹出错误信息\n        if (data.status !== \"Ok\") {\n          return this.$dialog.alert({\n            title: \"提示\",\n            message: data.message,\n            theme: \"round-button\",\n            confirmButtonColor: \"#fa209f\",\n          });\n        }\n        // 后台验证通过，登录成功\n        // console.log(data);\n        const {WebToken, message, userId} = data;\n        this.$toast({\n          type: \"success\",\n          message: message,\n        });\n        window.localStorage.setItem(\"WebToken\", WebToken);\n        window.localStorage.setItem(\"userId\", userId);\n        const Path = window.localStorage.getItem(\"fromPath\");\n        setTimeout(() => {\n          this.$router.replace(Path || \"/mine\");\n        }, 1000);\n      }\n    },\n\n    // 验证码登录验证码部分\n    // 点击获取验证码触发\n    // getValidateCode() {\n    //   // 计时中无法触发函数\n    //   if (this.countDown !== 0) {\n    //     return;\n    //   }\n    //   // 先判断手机号是否输入正确\n    //   if (!this.checkPhone) {\n    //     return this.$dialog.alert({\n    //       title: \"提示\",\n    //       message: \"请输入正确格式的手机号\",\n    //       theme: \"round-button\",\n    //       confirmButtonColor: \"#fa209f\",\n    //     });\n    //   }\n    //   this.countDown = 10;\n    //   // 计时10秒\n    //   let timer = setInterval(() => {\n    //     this.countDown--;\n    //     if (this.countDown === 0) {\n    //       clearInterval(timer);\n    //     }\n    //   }, 1000);\n    //   // 在每次获取时清空上次获取的验证码值\n    //   this.phoneIdentifyCode = \"\";\n    //   // 获取验证码\n    //   this.makePhoneIdentifyCode(4);\n    //   this.$dialog.alert({\n    //     title: \"提示\",\n    //     message: `手机验证码为:${this.phoneIdentifyCode}`,\n    //     theme: \"round-button\",\n    //     confirmButtonColor: \"#fa209f\",\n    //   });\n    //   // console.log(this.phoneIdentifyCode);\n    // },\n    // 生成l位数的随机验证码\n    makePhoneIdentifyCode(l) {\n      for (let i = 0; i < l; i++) {\n        this.phoneIdentifyCode +=\n            this.phoneIdentifyCodes[\n                this.randomNum(0, this.phoneIdentifyCodes.length)\n                ];\n      }\n    },\n    // 密码登录验证码部分\n    // 刷新验证码\n    refreshIdentifyCode() {\n      this.identifyCode = \"\";\n      this.makeIdentifyCode(4);\n    },\n    // 生成l位数的随机验证码\n    makeIdentifyCode(l) {\n      for (let i = 0; i < l; i++) {\n        this.identifyCode +=\n            this.identifyCodes[this.randomNum(0, this.identifyCodes.length)];\n      }\n    },\n    // 生成单个验证码\n    randomNum(min, max) {\n      return Math.floor(Math.random() * (max - min) + min);\n    },\n    // 点击左上角×触发\n  },\n  mounted() {\n    // 初始化验证码\n    this.identifyCode = \"\";\n    this.makeIdentifyCode(4);\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n/* 外部容器样式 */\n.login {\n  width: 100vw;\n  height: 100vh;\n  /* 渐变背景 */\n  //background: linear-gradient(125deg, #ffbe32, #b3fffa, #b6f597, #fdff79);\n  /* 指定背景图像的大小 */\n  background-size: 500%;\n  /* 执行动画：动画名 时长 线性的 无限次播放 */\n  animation: bgAnimation 15s linear infinite;\n}\n\n/* 定义动画 */\n//@keyframes bgAnimation {\n//  0% {\n//    background-position: 0% 50%;\n//  }\n//  50% {\n//    background-position: 100% 50%;\n//  }\n//  100% {\n//    background-position: 0% 50%;\n//  }\n//}\n// 顶部返回栏\n//.header {\n//  height: 3.8462rem;\n//  display: flex;\n//  align-items: center;\n//  font-size: 2rem;\n//  padding: 0 0.7692rem;\n//}\n// 登录内容部分\n.login-container {\n  margin-top: 3rem;\n  // 登录头部部分\n  .eng-title {\n    width: 10rem;\n    height: 1rem;\n    margin: 0 auto;\n    font-size: 1.5385rem;\n    color: #7DA340;\n\n    span {\n      font-size: 7.6923rem;\n    }\n  }\n\n  // 登录部分\n  .login-main {\n    margin-top: 3rem;\n    padding: 0.7692rem 3.0769rem;\n    .login-info {\n      width: 30%;\n      position: relative;\n      width: 100%;\n      height: 3.0769rem;\n\n      input {\n        width: 100%;\n        height: 100%;\n        border: none;\n        border-radius: 0.3846rem;\n        padding: 0 1em;\n        font-size: 1.0769rem;\n        box-sizing: border-box;\n        border: 0.0769rem solid transparent;\n      }\n\n      .codeBtn {\n        padding: 0;\n        width: 100%;\n        height: 100%;\n        position: absolute;\n        //right: 0.7692rem;\n        color: rgb(150, 150, 150);\n        border: none;\n        //padding: 0.3846rem;\n        background: transparent;\n        //top: 50%;\n        //transform: translate(0, -50%);\n      }\n\n      // 登录按钮部分\n      .login-submit {\n        margin: 0 auto;\n        //width: 10rem;\n        font-size: 1.2308rem;\n        border: none;\n        border-radius: 0.3846rem;\n      }\n    }\n\n\n    // 验证码按钮样式\n\n  }\n}\n\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}