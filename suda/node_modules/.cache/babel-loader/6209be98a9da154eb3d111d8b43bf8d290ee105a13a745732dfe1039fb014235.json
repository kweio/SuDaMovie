{"ast":null,"code":"const {\n  execSync\n} = require('child_process');\nconst fs = require('fs');\nconst path = require('path');\nconst LRU = require('lru-cache');\nconst semver = require('semver');\nlet _hasYarn;\nconst _yarnProjects = new LRU({\n  max: 10,\n  maxAge: 1000\n});\nlet _hasGit;\nconst _gitProjects = new LRU({\n  max: 10,\n  maxAge: 1000\n});\n\n// env detection\nexports.hasYarn = () => {\n  if (process.env.VUE_CLI_TEST) {\n    return true;\n  }\n  if (_hasYarn != null) {\n    return _hasYarn;\n  }\n  try {\n    execSync('yarn --version', {\n      stdio: 'ignore'\n    });\n    return _hasYarn = true;\n  } catch (e) {\n    return _hasYarn = false;\n  }\n};\nexports.hasProjectYarn = cwd => {\n  if (_yarnProjects.has(cwd)) {\n    return checkYarn(_yarnProjects.get(cwd));\n  }\n  const lockFile = path.join(cwd, 'yarn.lock');\n  const result = fs.existsSync(lockFile);\n  _yarnProjects.set(cwd, result);\n  return checkYarn(result);\n};\nfunction checkYarn(result) {\n  if (result && !exports.hasYarn()) throw new Error(`The project seems to require yarn but it's not installed.`);\n  return result;\n}\nexports.hasGit = () => {\n  if (process.env.VUE_CLI_TEST) {\n    return true;\n  }\n  if (_hasGit != null) {\n    return _hasGit;\n  }\n  try {\n    execSync('git --version', {\n      stdio: 'ignore'\n    });\n    return _hasGit = true;\n  } catch (e) {\n    return _hasGit = false;\n  }\n};\nexports.hasProjectGit = cwd => {\n  if (_gitProjects.has(cwd)) {\n    return _gitProjects.get(cwd);\n  }\n  let result;\n  try {\n    execSync('git status', {\n      stdio: 'ignore',\n      cwd\n    });\n    result = true;\n  } catch (e) {\n    result = false;\n  }\n  _gitProjects.set(cwd, result);\n  return result;\n};\nlet _hasPnpm;\nlet _pnpmVersion;\nconst _pnpmProjects = new LRU({\n  max: 10,\n  maxAge: 1000\n});\nfunction getPnpmVersion() {\n  if (_pnpmVersion != null) {\n    return _pnpmVersion;\n  }\n  try {\n    _pnpmVersion = execSync('pnpm --version', {\n      stdio: ['pipe', 'pipe', 'ignore']\n    }).toString();\n    // there's a critical bug in pnpm 2\n    // https://github.com/pnpm/pnpm/issues/1678#issuecomment-469981972\n    // so we only support pnpm >= 3.0.0\n    _hasPnpm = true;\n  } catch (e) {}\n  return _pnpmVersion || '0.0.0';\n}\nexports.hasPnpmVersionOrLater = version => {\n  if (process.env.VUE_CLI_TEST) {\n    return true;\n  }\n  return semver.gte(getPnpmVersion(), version);\n};\nexports.hasPnpm3OrLater = () => {\n  return this.hasPnpmVersionOrLater('3.0.0');\n};\nexports.hasProjectPnpm = cwd => {\n  if (_pnpmProjects.has(cwd)) {\n    return checkPnpm(_pnpmProjects.get(cwd));\n  }\n  const lockFile = path.join(cwd, 'pnpm-lock.yaml');\n  const result = fs.existsSync(lockFile);\n  _pnpmProjects.set(cwd, result);\n  return checkPnpm(result);\n};\nfunction checkPnpm(result) {\n  if (result && !exports.hasPnpm3OrLater()) {\n    throw new Error(`The project seems to require pnpm${_hasPnpm ? ' >= 3' : ''} but it's not installed.`);\n  }\n  return result;\n}\nconst _npmProjects = new LRU({\n  max: 10,\n  maxAge: 1000\n});\nexports.hasProjectNpm = cwd => {\n  if (_npmProjects.has(cwd)) {\n    return _npmProjects.get(cwd);\n  }\n  const lockFile = path.join(cwd, 'package-lock.json');\n  const result = fs.existsSync(lockFile);\n  _npmProjects.set(cwd, result);\n  return result;\n};\n\n// OS\nexports.isWindows = process.platform === 'win32';\nexports.isMacintosh = process.platform === 'darwin';\nexports.isLinux = process.platform === 'linux';\nconst browsers = {};\nlet hasCheckedBrowsers = false;\nfunction tryRun(cmd) {\n  try {\n    return execSync(cmd, {\n      stdio: [0, 'pipe', 'ignore'],\n      timeout: 10000\n    }).toString().trim();\n  } catch (e) {\n    return '';\n  }\n}\nfunction getLinuxAppVersion(binary) {\n  return tryRun(`${binary} --version`).replace(/^.* ([^ ]*)/g, '$1');\n}\nfunction getMacAppVersion(bundleIdentifier) {\n  const bundlePath = tryRun(`mdfind \"kMDItemCFBundleIdentifier=='${bundleIdentifier}'\"`);\n  if (bundlePath) {\n    return tryRun(`/usr/libexec/PlistBuddy -c Print:CFBundleShortVersionString ${bundlePath.replace(/(\\s)/g, '\\\\ ')}/Contents/Info.plist`);\n  }\n}\nexports.getInstalledBrowsers = () => {\n  if (hasCheckedBrowsers) {\n    return browsers;\n  }\n  hasCheckedBrowsers = true;\n  if (exports.isLinux) {\n    browsers.chrome = getLinuxAppVersion('google-chrome');\n    browsers.firefox = getLinuxAppVersion('firefox');\n  } else if (exports.isMacintosh) {\n    browsers.chrome = getMacAppVersion('com.google.Chrome');\n    browsers.firefox = getMacAppVersion('org.mozilla.firefox');\n  } else if (exports.isWindows) {\n    // get chrome stable version\n    // https://stackoverflow.com/a/51773107/2302258\n    const chromeQueryResult = tryRun('reg query \"HKLM\\\\Software\\\\Google\\\\Update\\\\Clients\\\\{8A69D345-D564-463c-AFF1-A69D9E530F96}\" /v pv /reg:32') || tryRun('reg query \"HKCU\\\\Software\\\\Google\\\\Update\\\\Clients\\\\{8A69D345-D564-463c-AFF1-A69D9E530F96}\" /v pv /reg:32');\n    if (chromeQueryResult) {\n      const matched = chromeQueryResult.match(/REG_SZ\\s+(\\S*)$/);\n      browsers.chrome = matched && matched[1];\n    }\n\n    // get firefox version\n    // https://community.spiceworks.com/topic/111518-how-to-determine-version-of-installed-firefox-in-windows-batchscript\n    const ffQueryResult = tryRun('reg query \"HKLM\\\\Software\\\\Mozilla\\\\Mozilla Firefox\" /v CurrentVersion');\n    if (ffQueryResult) {\n      const matched = ffQueryResult.match(/REG_SZ\\s+(\\S*)$/);\n      browsers.firefox = matched && matched[1];\n    }\n  }\n  return browsers;\n};","map":{"version":3,"names":["execSync","require","fs","path","LRU","semver","_hasYarn","_yarnProjects","max","maxAge","_hasGit","_gitProjects","exports","hasYarn","process","env","VUE_CLI_TEST","stdio","e","hasProjectYarn","cwd","has","checkYarn","get","lockFile","join","result","existsSync","set","Error","hasGit","hasProjectGit","_hasPnpm","_pnpmVersion","_pnpmProjects","getPnpmVersion","toString","hasPnpmVersionOrLater","version","gte","hasPnpm3OrLater","hasProjectPnpm","checkPnpm","_npmProjects","hasProjectNpm","isWindows","platform","isMacintosh","isLinux","browsers","hasCheckedBrowsers","tryRun","cmd","timeout","trim","getLinuxAppVersion","binary","replace","getMacAppVersion","bundleIdentifier","bundlePath","getInstalledBrowsers","chrome","firefox","chromeQueryResult","matched","match","ffQueryResult"],"sources":["D:/WebSpace/SuDaMovie/suda/node_modules/@vue/cli-shared-utils/lib/env.js"],"sourcesContent":["const { execSync } = require('child_process')\nconst fs = require('fs')\nconst path = require('path')\nconst LRU = require('lru-cache')\nconst semver = require('semver')\n\nlet _hasYarn\nconst _yarnProjects = new LRU({\n  max: 10,\n  maxAge: 1000\n})\nlet _hasGit\nconst _gitProjects = new LRU({\n  max: 10,\n  maxAge: 1000\n})\n\n// env detection\nexports.hasYarn = () => {\n  if (process.env.VUE_CLI_TEST) {\n    return true\n  }\n  if (_hasYarn != null) {\n    return _hasYarn\n  }\n  try {\n    execSync('yarn --version', { stdio: 'ignore' })\n    return (_hasYarn = true)\n  } catch (e) {\n    return (_hasYarn = false)\n  }\n}\n\nexports.hasProjectYarn = (cwd) => {\n  if (_yarnProjects.has(cwd)) {\n    return checkYarn(_yarnProjects.get(cwd))\n  }\n\n  const lockFile = path.join(cwd, 'yarn.lock')\n  const result = fs.existsSync(lockFile)\n  _yarnProjects.set(cwd, result)\n  return checkYarn(result)\n}\n\nfunction checkYarn (result) {\n  if (result && !exports.hasYarn()) throw new Error(`The project seems to require yarn but it's not installed.`)\n  return result\n}\n\nexports.hasGit = () => {\n  if (process.env.VUE_CLI_TEST) {\n    return true\n  }\n  if (_hasGit != null) {\n    return _hasGit\n  }\n  try {\n    execSync('git --version', { stdio: 'ignore' })\n    return (_hasGit = true)\n  } catch (e) {\n    return (_hasGit = false)\n  }\n}\n\nexports.hasProjectGit = (cwd) => {\n  if (_gitProjects.has(cwd)) {\n    return _gitProjects.get(cwd)\n  }\n\n  let result\n  try {\n    execSync('git status', { stdio: 'ignore', cwd })\n    result = true\n  } catch (e) {\n    result = false\n  }\n  _gitProjects.set(cwd, result)\n  return result\n}\n\nlet _hasPnpm\nlet _pnpmVersion\nconst _pnpmProjects = new LRU({\n  max: 10,\n  maxAge: 1000\n})\n\nfunction getPnpmVersion () {\n  if (_pnpmVersion != null) {\n    return _pnpmVersion\n  }\n  try {\n    _pnpmVersion = execSync('pnpm --version', {\n      stdio: ['pipe', 'pipe', 'ignore']\n    }).toString()\n    // there's a critical bug in pnpm 2\n    // https://github.com/pnpm/pnpm/issues/1678#issuecomment-469981972\n    // so we only support pnpm >= 3.0.0\n    _hasPnpm = true\n  } catch (e) {}\n  return _pnpmVersion || '0.0.0'\n}\n\nexports.hasPnpmVersionOrLater = (version) => {\n  if (process.env.VUE_CLI_TEST) {\n    return true\n  }\n  return semver.gte(getPnpmVersion(), version)\n}\n\nexports.hasPnpm3OrLater = () => {\n  return this.hasPnpmVersionOrLater('3.0.0')\n}\n\nexports.hasProjectPnpm = (cwd) => {\n  if (_pnpmProjects.has(cwd)) {\n    return checkPnpm(_pnpmProjects.get(cwd))\n  }\n\n  const lockFile = path.join(cwd, 'pnpm-lock.yaml')\n  const result = fs.existsSync(lockFile)\n  _pnpmProjects.set(cwd, result)\n  return checkPnpm(result)\n}\n\nfunction checkPnpm (result) {\n  if (result && !exports.hasPnpm3OrLater()) {\n    throw new Error(`The project seems to require pnpm${_hasPnpm ? ' >= 3' : ''} but it's not installed.`)\n  }\n  return result\n}\n\nconst _npmProjects = new LRU({\n  max: 10,\n  maxAge: 1000\n})\nexports.hasProjectNpm = (cwd) => {\n  if (_npmProjects.has(cwd)) {\n    return _npmProjects.get(cwd)\n  }\n\n  const lockFile = path.join(cwd, 'package-lock.json')\n  const result = fs.existsSync(lockFile)\n  _npmProjects.set(cwd, result)\n  return result\n}\n\n// OS\nexports.isWindows = process.platform === 'win32'\nexports.isMacintosh = process.platform === 'darwin'\nexports.isLinux = process.platform === 'linux'\n\nconst browsers = {}\nlet hasCheckedBrowsers = false\n\nfunction tryRun (cmd) {\n  try {\n    return execSync(cmd, {\n      stdio: [0, 'pipe', 'ignore'],\n      timeout: 10000\n    }).toString().trim()\n  } catch (e) {\n    return ''\n  }\n}\n\nfunction getLinuxAppVersion (binary) {\n  return tryRun(`${binary} --version`).replace(/^.* ([^ ]*)/g, '$1')\n}\n\nfunction getMacAppVersion (bundleIdentifier) {\n  const bundlePath = tryRun(`mdfind \"kMDItemCFBundleIdentifier=='${bundleIdentifier}'\"`)\n\n  if (bundlePath) {\n    return tryRun(`/usr/libexec/PlistBuddy -c Print:CFBundleShortVersionString ${\n      bundlePath.replace(/(\\s)/g, '\\\\ ')\n    }/Contents/Info.plist`)\n  }\n}\n\nexports.getInstalledBrowsers = () => {\n  if (hasCheckedBrowsers) {\n    return browsers\n  }\n  hasCheckedBrowsers = true\n\n  if (exports.isLinux) {\n    browsers.chrome = getLinuxAppVersion('google-chrome')\n    browsers.firefox = getLinuxAppVersion('firefox')\n  } else if (exports.isMacintosh) {\n    browsers.chrome = getMacAppVersion('com.google.Chrome')\n    browsers.firefox = getMacAppVersion('org.mozilla.firefox')\n  } else if (exports.isWindows) {\n    // get chrome stable version\n    // https://stackoverflow.com/a/51773107/2302258\n    const chromeQueryResult = tryRun(\n      'reg query \"HKLM\\\\Software\\\\Google\\\\Update\\\\Clients\\\\{8A69D345-D564-463c-AFF1-A69D9E530F96}\" /v pv /reg:32'\n    ) || tryRun(\n      'reg query \"HKCU\\\\Software\\\\Google\\\\Update\\\\Clients\\\\{8A69D345-D564-463c-AFF1-A69D9E530F96}\" /v pv /reg:32'\n    )\n    if (chromeQueryResult) {\n      const matched = chromeQueryResult.match(/REG_SZ\\s+(\\S*)$/)\n      browsers.chrome = matched && matched[1]\n    }\n\n    // get firefox version\n    // https://community.spiceworks.com/topic/111518-how-to-determine-version-of-installed-firefox-in-windows-batchscript\n    const ffQueryResult = tryRun(\n      'reg query \"HKLM\\\\Software\\\\Mozilla\\\\Mozilla Firefox\" /v CurrentVersion'\n    )\n    if (ffQueryResult) {\n      const matched = ffQueryResult.match(/REG_SZ\\s+(\\S*)$/)\n      browsers.firefox = matched && matched[1]\n    }\n  }\n\n  return browsers\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}