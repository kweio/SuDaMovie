{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"MyRegister\",\n  data() {\n    return {\n      phoneCode: \"\",\n      // 输入的手机验证码\n      phoneIdentifyCode: \"\",\n      //生成的手机验证码\n      phoneIdentifyCodes: \"1234567890\",\n      //生成手机验证码的依据\n      countDown: 0,\n      //倒计时,获取验证码与重新获取验证码切换状态\n      checked: true,\n      //-------------分割线--------------\n      // 密码登录部分\n      user: {\n        name: \"\",\n        //用户名\n        phone: \"\",\n        //手机号\n        password: \"\",\n        //密码\n        re_password: \"\"\n      }\n    };\n  },\n  computed: {\n    //检查手机格式\n    checkPhone() {\n      return /^1[3|4|5|6|7|8][0-9]{11}$/.test(this.phone);\n    }\n  },\n  methods: {\n    // 登录按钮触发\n    async register() {\n      // 密码登录\n      // 表单验证\n      if (!this.user.name) {\n        return this.$toast({\n          title: \"fail\",\n          message: \"请输入用户名\",\n          duration: 1000\n        });\n      } else if (!this.user.password) {\n        return this.$toast({\n          type: \"fail\",\n          message: \"密码不可为空\",\n          duration: 1000\n        });\n      } else if (!this.user.re_password) {\n        return this.$toast({\n          type: \"fail\",\n          message: \"请确认密码\",\n          duration: 1000\n        });\n      } else if (this.user.password !== this.user.re_password) {\n        return this.$toast({\n          type: \"fail\",\n          message: \"密码不一致\",\n          duration: 1000\n        });\n      } else {\n        const params = {\n          name: this.user.name,\n          password: this.user.password\n        };\n        const res = await this.$http.post('/register', params); // eslint-disable-line no-unused-vars\n        await this.$router.push('/');\n      }\n    },\n    // 点击获取验证码触发\n    getValidateCode() {\n      // 计时中无法触发函数\n      if (this.countDown !== 0) {\n        return;\n      }\n      // 先判断手机号是否输入正确\n      if (!this.checkPhone) {\n        return this.$dialog.alert({\n          title: \"提示\",\n          message: \"请输入正确格式的手机号\",\n          theme: \"round-button\",\n          confirmButtonColor: \"#6F9839\"\n        });\n      }\n      this.countDown = 10;\n      // 计时10秒\n      let timer = setInterval(() => {\n        this.countDown--;\n        if (this.countDown === 0) {\n          clearInterval(timer);\n        }\n      }, 1000);\n      // 在每次获取时清空上次获取的验证码值\n      this.phoneIdentifyCode = \"\";\n      // 获取验证码\n      this.makePhoneIdentifyCode(4);\n      this.$dialog.alert({\n        title: \"提示\",\n        message: `手机验证码为:${this.phoneIdentifyCode}`,\n        theme: \"round-button\",\n        confirmButtonColor: \"#6F9839\"\n      });\n      // console.log(this.phoneIdentifyCode);\n    },\n\n    // 生成l位数的随机验证码\n    makePhoneIdentifyCode(l) {\n      for (let i = 0; i < l; i++) {\n        this.phoneIdentifyCode += this.phoneIdentifyCodes[this.randomNum(0, this.phoneIdentifyCodes.length)];\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AAuEA;EACAA;EACAC;IACA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MACA;MACA;MACAC;QACAP;QAAA;QACAQ;QAAA;QACAC;QAAA;QACAC;MACA;IACA;EACA;EACAC;IACA;IACAC;MACA;IACA;EACA;EACAC;IACA;IACA;MACA;MACA;MACA;QACA;UACAC;UACAC;UACAC;QACA;MACA;QACA;UACAC;UACAF;UACAC;QACA;MACA;QACA;UACAC;UACAF;UACAC;QACA;MACA;QACA;UACAC;UACAF;UACAC;QACA;MACA;QACA;UACAhB;UACAS;QACA;QACA;QACA;MACA;IACA;IACA;IACAS;MACA;MACA;QACA;MACA;MACA;MACA;QACA;UACAJ;UACAC;UACAI;UACAC;QACA;MACA;MACA;MACA;MACA;QACA;QACA;UACAC;QACA;MACA;MACA;MACA;MACA;MACA;MACA;QACAP;QACAC;QACAI;QACAC;MACA;MACA;IACA;;IACA;IACAE;MACA;QACA,0BACA,wBACA,kDACA;MACA;IACA;EACA;AACA","names":["name","data","phoneCode","phoneIdentifyCode","phoneIdentifyCodes","countDown","checked","user","phone","password","re_password","computed","checkPhone","methods","title","message","duration","type","getValidateCode","theme","confirmButtonColor","clearInterval","makePhoneIdentifyCode"],"sourceRoot":"src/views/login","sources":["MyRegister.vue"],"sourcesContent":["<template>\r\n  <div class=\"login\">\r\n    <!-- 登录内容部分 -->\r\n    <div class=\"login-container\">\r\n      <!--       登录头部部分-->\r\n      <div class=\"login-header\">\r\n        <i class=\"eng-title\">欢迎注册</i>\r\n      </div>\r\n      <!-- 登录内容部分 -->\r\n      <div class=\"login-content\">\r\n        <!-- 注册部分 -->\r\n        <div class=\"login-main\">\r\n          <form>\r\n            <!-- 密码登录部分 -->\r\n            <div class=\"login-phone\">\r\n              <section class=\"login-info\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"请输入用户名\"\r\n                    v-model=\"user.name\"\r\n                />\r\n              </section>\r\n              <section class=\"login-info\">\r\n                <input\r\n                    type=\"number\"\r\n                    placeholder=\"请输入手机号\"\r\n                    v-model=\"user.phone\"\r\n                />\r\n                <button\r\n                    @click.prevent=\"getValidateCode\"\r\n                    :class=\"['codeBtn', checkPhone ? 'active-code' : '']\"\r\n                    v-if=\"countDown === 0\"\r\n                >\r\n                  获取验证码\r\n                </button>\r\n                <div class=\"codeBtn\" v-else>重新获取({{ countDown }}s)</div>\r\n              </section>\r\n              <!-- 验证码输入框部分 -->\r\n              <section class=\"login-info\">\r\n                <input\r\n                    type=\"number\"\r\n                    placeholder=\"请输入验证码\"\r\n                    v-model=\"phoneCode\"\r\n                />\r\n              </section>\r\n              <section class=\"login-info\">\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"请输入密码\"\r\n                    v-model=\"user.password\"\r\n                />\r\n              </section>\r\n              <section class=\"login-info\">\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"请再次输入密码\"\r\n                    v-model=\"user.re_password\"\r\n                />\r\n              </section>\r\n            </div>\r\n            <button class=\"login-submit\" @click.prevent=\"register(user)\">注册</button>\r\n            <van-checkbox v-model=\"checked\">阅读并同意<a>《用户协议》</a>与<a>《隐私政策》</a></van-checkbox>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: \"MyRegister\",\r\n  data() {\r\n    return {\r\n      phoneCode: \"\", // 输入的手机验证码\r\n      phoneIdentifyCode: \"\", //生成的手机验证码\r\n      phoneIdentifyCodes: \"1234567890\", //生成手机验证码的依据\r\n      countDown: 0, //倒计时,获取验证码与重新获取验证码切换状态\r\n      checked: true,\r\n      //-------------分割线--------------\r\n      // 密码登录部分\r\n      user: {\r\n        name: \"\", //用户名\r\n        phone: \"\", //手机号\r\n        password: \"\", //密码\r\n        re_password: \"\",\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    //检查手机格式\r\n    checkPhone() {\r\n      return /^1[3|4|5|6|7|8][0-9]{11}$/.test(this.phone);\r\n    },\r\n  },\r\n  methods: {\r\n    // 登录按钮触发\r\n    async register() {\r\n      // 密码登录\r\n      // 表单验证\r\n      if (!this.user.name) {\r\n        return this.$toast({\r\n          title: \"fail\",\r\n          message: \"请输入用户名\",\r\n          duration: 1000,\r\n        });\r\n      } else if (!this.user.password) {\r\n        return this.$toast({\r\n          type: \"fail\",\r\n          message: \"密码不可为空\",\r\n          duration: 1000,\r\n        });\r\n      } else if (!this.user.re_password) {\r\n        return this.$toast({\r\n          type: \"fail\",\r\n          message: \"请确认密码\",\r\n          duration: 1000,\r\n        });\r\n      } else if (this.user.password !== this.user.re_password) {\r\n        return this.$toast({\r\n          type: \"fail\",\r\n          message: \"密码不一致\",\r\n          duration: 1000,\r\n        });\r\n      } else {\r\n        const params = {\r\n          name: this.user.name,\r\n          password: this.user.password\r\n        }\r\n        const res = await this.$http.post('/register', params)// eslint-disable-line no-unused-vars\r\n        await this.$router.push('/')\r\n      }\r\n    },\r\n    // 点击获取验证码触发\r\n    getValidateCode() {\r\n      // 计时中无法触发函数\r\n      if (this.countDown !== 0) {\r\n        return;\r\n      }\r\n      // 先判断手机号是否输入正确\r\n      if (!this.checkPhone) {\r\n        return this.$dialog.alert({\r\n          title: \"提示\",\r\n          message: \"请输入正确格式的手机号\",\r\n          theme: \"round-button\",\r\n          confirmButtonColor: \"#6F9839\",\r\n        });\r\n      }\r\n      this.countDown = 10;\r\n      // 计时10秒\r\n      let timer = setInterval(() => {\r\n        this.countDown--;\r\n        if (this.countDown === 0) {\r\n          clearInterval(timer);\r\n        }\r\n      }, 1000);\r\n      // 在每次获取时清空上次获取的验证码值\r\n      this.phoneIdentifyCode = \"\";\r\n      // 获取验证码\r\n      this.makePhoneIdentifyCode(4);\r\n      this.$dialog.alert({\r\n        title: \"提示\",\r\n        message: `手机验证码为:${this.phoneIdentifyCode}`,\r\n        theme: \"round-button\",\r\n        confirmButtonColor: \"#6F9839\",\r\n      });\r\n      // console.log(this.phoneIdentifyCode);\r\n    },\r\n    // 生成l位数的随机验证码\r\n    makePhoneIdentifyCode(l) {\r\n      for (let i = 0; i < l; i++) {\r\n        this.phoneIdentifyCode +=\r\n            this.phoneIdentifyCodes[\r\n                this.randomNum(0, this.phoneIdentifyCodes.length)\r\n                ];\r\n      }\r\n    },\r\n  },\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.body {\r\n  margin: 0;\r\n}\r\n\r\n/* 外部容器样式 */\r\n.login {\r\n  width: 100vw;\r\n  height: 100vh;\r\n  /* 渐变背景 */\r\n  background: linear-gradient(125deg, #ffbe32, #b3fffa, #b6f597, #fdff79);\r\n  /* 指定背景图像的大小 */\r\n  background-size: 500%;\r\n  /* 执行动画：动画名 时长 线性的 无限次播放 */\r\n  animation: bgAnimation 15s linear infinite;\r\n}\r\n\r\n/* 定义动画 */\r\n@keyframes bgAnimation {\r\n  0% {\r\n    background-position: 0% 50%;\r\n  }\r\n  50% {\r\n    background-position: 100% 50%;\r\n  }\r\n  100% {\r\n    background-position: 0% 50%;\r\n  }\r\n}\r\n\r\n// 登录内容部分\r\n.login-container {\r\n  // 登录头部部分\r\n  .login-header {\r\n    padding-top: 3.5385rem;\r\n    font-size: 2.5385rem;\r\n    color: #6F9839;\r\n    text-align: center;\r\n\r\n    span {\r\n      font-size: 7.6923rem;\r\n    }\r\n  }\r\n  // 登录内容部分\r\n  .login-content {\r\n    // 登录部分\r\n    .login-main {\r\n      padding: 2.7692rem 3.0769rem;\r\n      // 1.手机验证码登录与密码登录部分\r\n      // 这俩部分样式都一样\r\n      .login-info {\r\n        position: relative;\r\n        width: 100%;\r\n        height: 3.0769rem;\r\n        //padding-top: 1.5385rem;\r\n        input {\r\n          width: 100%;\r\n          height: 100%;\r\n          //border: none;\r\n          border-radius: 0.3846rem;\r\n          padding: 0 1rem;\r\n          font-size: 1.0769rem;\r\n          box-sizing: border-box;\r\n          border: 0.0769rem solid transparent;\r\n        }\r\n        // 验证码按钮样式\r\n        .codeBtn {\r\n          position: absolute;\r\n          right: 0.9692rem;\r\n          border: none;\r\n          //padding-left: 3.3846rem;\r\n          background: transparent;\r\n          top: 50%;\r\n          transform: translate(10%, -50%);\r\n        }\r\n\r\n        。register-submit {\r\n          float: right;\r\n        }\r\n      }\r\n\r\n      .login-phone {\r\n        height: 11.5385rem;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: space-around;\r\n        // 提示部分样式\r\n        .login-tip {\r\n          text-align: justify;\r\n          color: rgb(150, 150, 150);\r\n        }\r\n      }\r\n      // 登录按钮部分\r\n      .login-submit {\r\n        margin-top: 0.7692rem;\r\n        width: 100%;\r\n        font-size: 1.2308rem;\r\n        padding: 1.1538rem 0;\r\n        color: #fff;\r\n        background-color: #6F9839;\r\n        border: none;\r\n        border-radius: 0.3846rem;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}