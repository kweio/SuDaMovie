{"ast":null,"code":"const chalk = require('chalk');\nconst stripAnsi = require('strip-ansi');\nconst readline = require('readline');\nconst EventEmitter = require('events');\nconst {\n  stopSpinner\n} = require('./spinner');\nexports.events = new EventEmitter();\nfunction _log(type, tag, message) {\n  if (process.env.VUE_CLI_API_MODE && message) {\n    exports.events.emit('log', {\n      message,\n      type,\n      tag\n    });\n  }\n}\nconst format = (label, msg) => {\n  return msg.split('\\n').map((line, i) => {\n    return i === 0 ? `${label} ${line}` : line.padStart(stripAnsi(label).length + line.length + 1);\n  }).join('\\n');\n};\nconst chalkTag = msg => chalk.bgBlackBright.white.dim(` ${msg} `);\nexports.log = (msg = '', tag = null) => {\n  tag ? console.log(format(chalkTag(tag), msg)) : console.log(msg);\n  _log('log', tag, msg);\n};\nexports.info = (msg, tag = null) => {\n  console.log(format(chalk.bgBlue.black(' INFO ') + (tag ? chalkTag(tag) : ''), msg));\n  _log('info', tag, msg);\n};\nexports.done = (msg, tag = null) => {\n  console.log(format(chalk.bgGreen.black(' DONE ') + (tag ? chalkTag(tag) : ''), msg));\n  _log('done', tag, msg);\n};\nexports.warn = (msg, tag = null) => {\n  console.warn(format(chalk.bgYellow.black(' WARN ') + (tag ? chalkTag(tag) : ''), chalk.yellow(msg)));\n  _log('warn', tag, msg);\n};\nexports.error = (msg, tag = null) => {\n  stopSpinner();\n  console.error(format(chalk.bgRed(' ERROR ') + (tag ? chalkTag(tag) : ''), chalk.red(msg)));\n  _log('error', tag, msg);\n  if (msg instanceof Error) {\n    console.error(msg.stack);\n    _log('error', tag, msg.stack);\n  }\n};\nexports.clearConsole = title => {\n  if (process.stdout.isTTY) {\n    const blank = '\\n'.repeat(process.stdout.rows);\n    console.log(blank);\n    readline.cursorTo(process.stdout, 0, 0);\n    readline.clearScreenDown(process.stdout);\n    if (title) {\n      console.log(title);\n    }\n  }\n};\n\n// silent all logs except errors during tests and keep record\nif (process.env.VUE_CLI_TEST) {\n  require('./_silence')('logs', exports);\n}","map":{"version":3,"names":["chalk","require","stripAnsi","readline","EventEmitter","stopSpinner","exports","events","_log","type","tag","message","process","env","VUE_CLI_API_MODE","emit","format","label","msg","split","map","line","i","padStart","length","join","chalkTag","bgBlackBright","white","dim","log","console","info","bgBlue","black","done","bgGreen","warn","bgYellow","yellow","error","bgRed","red","Error","stack","clearConsole","title","stdout","isTTY","blank","repeat","rows","cursorTo","clearScreenDown","VUE_CLI_TEST"],"sources":["D:/WebSpace/SuDaMovie/suda/node_modules/@vue/cli-shared-utils/lib/logger.js"],"sourcesContent":["const chalk = require('chalk')\nconst stripAnsi = require('strip-ansi')\nconst readline = require('readline')\nconst EventEmitter = require('events')\n\nconst { stopSpinner } = require('./spinner')\n\nexports.events = new EventEmitter()\n\nfunction _log (type, tag, message) {\n  if (process.env.VUE_CLI_API_MODE && message) {\n    exports.events.emit('log', {\n      message,\n      type,\n      tag\n    })\n  }\n}\n\nconst format = (label, msg) => {\n  return msg.split('\\n').map((line, i) => {\n    return i === 0\n      ? `${label} ${line}`\n      : line.padStart(stripAnsi(label).length + line.length + 1)\n  }).join('\\n')\n}\n\nconst chalkTag = msg => chalk.bgBlackBright.white.dim(` ${msg} `)\n\nexports.log = (msg = '', tag = null) => {\n  tag ? console.log(format(chalkTag(tag), msg)) : console.log(msg)\n  _log('log', tag, msg)\n}\n\nexports.info = (msg, tag = null) => {\n  console.log(format(chalk.bgBlue.black(' INFO ') + (tag ? chalkTag(tag) : ''), msg))\n  _log('info', tag, msg)\n}\n\nexports.done = (msg, tag = null) => {\n  console.log(format(chalk.bgGreen.black(' DONE ') + (tag ? chalkTag(tag) : ''), msg))\n  _log('done', tag, msg)\n}\n\nexports.warn = (msg, tag = null) => {\n  console.warn(format(chalk.bgYellow.black(' WARN ') + (tag ? chalkTag(tag) : ''), chalk.yellow(msg)))\n  _log('warn', tag, msg)\n}\n\nexports.error = (msg, tag = null) => {\n  stopSpinner()\n  console.error(format(chalk.bgRed(' ERROR ') + (tag ? chalkTag(tag) : ''), chalk.red(msg)))\n  _log('error', tag, msg)\n  if (msg instanceof Error) {\n    console.error(msg.stack)\n    _log('error', tag, msg.stack)\n  }\n}\n\nexports.clearConsole = title => {\n  if (process.stdout.isTTY) {\n    const blank = '\\n'.repeat(process.stdout.rows)\n    console.log(blank)\n    readline.cursorTo(process.stdout, 0, 0)\n    readline.clearScreenDown(process.stdout)\n    if (title) {\n      console.log(title)\n    }\n  }\n}\n\n// silent all logs except errors during tests and keep record\nif (process.env.VUE_CLI_TEST) {\n  require('./_silence')('logs', exports)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}