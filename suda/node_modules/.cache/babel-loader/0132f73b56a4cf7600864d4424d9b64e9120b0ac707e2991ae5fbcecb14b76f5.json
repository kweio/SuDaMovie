{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file at\n * https://github.com/facebook/create-react-app/blob/master/LICENSE\n */\n\nconst open = require('open');\nconst execa = require('execa');\nconst chalk = require('chalk');\nconst execSync = require('child_process').execSync;\n\n// https://github.com/sindresorhus/open#app\nconst OSX_CHROME = 'google chrome';\nconst Actions = Object.freeze({\n  NONE: 0,\n  BROWSER: 1,\n  SCRIPT: 2\n});\nfunction getBrowserEnv() {\n  // Attempt to honor this environment variable.\n  // It is specific to the operating system.\n  // See https://github.com/sindresorhus/open#app for documentation.\n  const value = process.env.BROWSER;\n  let action;\n  if (!value) {\n    // Default.\n    action = Actions.BROWSER;\n  } else if (value.toLowerCase().endsWith('.js')) {\n    action = Actions.SCRIPT;\n  } else if (value.toLowerCase() === 'none') {\n    action = Actions.NONE;\n  } else {\n    action = Actions.BROWSER;\n  }\n  return {\n    action,\n    value\n  };\n}\nfunction executeNodeScript(scriptPath, url) {\n  const extraArgs = process.argv.slice(2);\n  const child = execa('node', [scriptPath, ...extraArgs, url], {\n    stdio: 'inherit'\n  });\n  child.on('close', code => {\n    if (code !== 0) {\n      console.log();\n      console.log(chalk.red('The script specified as BROWSER environment variable failed.'));\n      console.log(chalk.cyan(scriptPath) + ' exited with code ' + code + '.');\n      console.log();\n    }\n  });\n  return true;\n}\nfunction startBrowserProcess(browser, url) {\n  // If we're on OS X, the user hasn't specifically\n  // requested a different browser, we can try opening\n  // Chrome with AppleScript. This lets us reuse an\n  // existing tab when possible instead of creating a new one.\n  const shouldTryOpenChromeWithAppleScript = process.platform === 'darwin' && (typeof browser !== 'string' || browser === OSX_CHROME);\n  if (shouldTryOpenChromeWithAppleScript) {\n    try {\n      // Try our best to reuse existing tab\n      // on OS X Google Chrome with AppleScript\n      execSync('ps cax | grep \"Google Chrome\"');\n      execSync('osascript openChrome.applescript \"' + encodeURI(url) + '\"', {\n        cwd: __dirname,\n        stdio: 'ignore'\n      });\n      return true;\n    } catch (err) {\n      // Ignore errors.\n    }\n  }\n\n  // Another special case: on OS X, check if BROWSER has been set to \"open\".\n  // In this case, instead of passing the string `open` to `open` function (which won't work),\n  // just ignore it (thus ensuring the intended behavior, i.e. opening the system browser):\n  // https://github.com/facebook/create-react-app/pull/1690#issuecomment-283518768\n  if (process.platform === 'darwin' && browser === 'open') {\n    browser = undefined;\n  }\n\n  // Fallback to open\n  // (It will always open new tab)\n  try {\n    const options = {\n      app: {\n        name: browser\n      },\n      url: true\n    };\n    open(url, options).catch(() => {}); // Prevent `unhandledRejection` error.\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\n/**\n * Reads the BROWSER environment variable and decides what to do with it. Returns\n * true if it opened a browser or ran a node.js script, otherwise false.\n */\nexports.openBrowser = function (url) {\n  const {\n    action,\n    value\n  } = getBrowserEnv();\n  switch (action) {\n    case Actions.NONE:\n      // Special case: BROWSER=\"none\" will prevent opening completely.\n      return false;\n    case Actions.SCRIPT:\n      return executeNodeScript(value, url);\n    case Actions.BROWSER:\n      return startBrowserProcess(value, url);\n    default:\n      throw new Error('Not implemented.');\n  }\n};","map":{"version":3,"names":["open","require","execa","chalk","execSync","OSX_CHROME","Actions","Object","freeze","NONE","BROWSER","SCRIPT","getBrowserEnv","value","process","env","action","toLowerCase","endsWith","executeNodeScript","scriptPath","url","extraArgs","argv","slice","child","stdio","on","code","console","log","red","cyan","startBrowserProcess","browser","shouldTryOpenChromeWithAppleScript","platform","encodeURI","cwd","__dirname","err","undefined","options","app","name","catch","exports","openBrowser","Error"],"sources":["D:/WebSpace/SuDaMovie/suda/node_modules/@vue/cli-shared-utils/lib/openBrowser.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file at\n * https://github.com/facebook/create-react-app/blob/master/LICENSE\n */\n\nconst open = require('open')\nconst execa = require('execa')\nconst chalk = require('chalk')\nconst execSync = require('child_process').execSync\n\n// https://github.com/sindresorhus/open#app\nconst OSX_CHROME = 'google chrome'\n\nconst Actions = Object.freeze({\n  NONE: 0,\n  BROWSER: 1,\n  SCRIPT: 2\n})\n\nfunction getBrowserEnv () {\n  // Attempt to honor this environment variable.\n  // It is specific to the operating system.\n  // See https://github.com/sindresorhus/open#app for documentation.\n  const value = process.env.BROWSER\n  let action\n  if (!value) {\n    // Default.\n    action = Actions.BROWSER\n  } else if (value.toLowerCase().endsWith('.js')) {\n    action = Actions.SCRIPT\n  } else if (value.toLowerCase() === 'none') {\n    action = Actions.NONE\n  } else {\n    action = Actions.BROWSER\n  }\n  return { action, value }\n}\n\nfunction executeNodeScript (scriptPath, url) {\n  const extraArgs = process.argv.slice(2)\n  const child = execa('node', [scriptPath, ...extraArgs, url], {\n    stdio: 'inherit'\n  })\n  child.on('close', code => {\n    if (code !== 0) {\n      console.log()\n      console.log(\n        chalk.red(\n          'The script specified as BROWSER environment variable failed.'\n        )\n      )\n      console.log(chalk.cyan(scriptPath) + ' exited with code ' + code + '.')\n      console.log()\n    }\n  })\n  return true\n}\n\nfunction startBrowserProcess (browser, url) {\n  // If we're on OS X, the user hasn't specifically\n  // requested a different browser, we can try opening\n  // Chrome with AppleScript. This lets us reuse an\n  // existing tab when possible instead of creating a new one.\n  const shouldTryOpenChromeWithAppleScript =\n    process.platform === 'darwin' &&\n    (typeof browser !== 'string' || browser === OSX_CHROME)\n\n  if (shouldTryOpenChromeWithAppleScript) {\n    try {\n      // Try our best to reuse existing tab\n      // on OS X Google Chrome with AppleScript\n      execSync('ps cax | grep \"Google Chrome\"')\n      execSync('osascript openChrome.applescript \"' + encodeURI(url) + '\"', {\n        cwd: __dirname,\n        stdio: 'ignore'\n      })\n      return true\n    } catch (err) {\n      // Ignore errors.\n    }\n  }\n\n  // Another special case: on OS X, check if BROWSER has been set to \"open\".\n  // In this case, instead of passing the string `open` to `open` function (which won't work),\n  // just ignore it (thus ensuring the intended behavior, i.e. opening the system browser):\n  // https://github.com/facebook/create-react-app/pull/1690#issuecomment-283518768\n  if (process.platform === 'darwin' && browser === 'open') {\n    browser = undefined\n  }\n\n  // Fallback to open\n  // (It will always open new tab)\n  try {\n    const options = { app: { name: browser }, url: true }\n    open(url, options).catch(() => {}) // Prevent `unhandledRejection` error.\n    return true\n  } catch (err) {\n    return false\n  }\n}\n\n/**\n * Reads the BROWSER environment variable and decides what to do with it. Returns\n * true if it opened a browser or ran a node.js script, otherwise false.\n */\nexports.openBrowser = function (url) {\n  const { action, value } = getBrowserEnv()\n  switch (action) {\n  case Actions.NONE:\n    // Special case: BROWSER=\"none\" will prevent opening completely.\n    return false\n  case Actions.SCRIPT:\n    return executeNodeScript(value, url)\n  case Actions.BROWSER:\n    return startBrowserProcess(value, url)\n  default:\n    throw new Error('Not implemented.')\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}