{"ast":null,"code":"import Vue from 'vue';\n// 引入vant组件\nimport Vant from 'vant';\n// 引入vant样式\nimport 'vant/lib/index.css';\nVue.use(Vant);\nimport App from './App.vue';\n// 全局引用并使用轮播图组件\n// import VueAwesomeSwiper from 'vue-awesome-swiper'\nimport router from './router';\nimport Http from './http';\nVue.prototype.$http = Http;\n// Vue.use(VueAwesomeSwiper, /* { default options with global component } */)\n\nVue.config.productionTip = false;\n// 定义全局混入\nVue.mixin({\n  methods: {\n    // 判断是否登录\n    async isLogin() {\n      const userId = window.localStorage.getItem(\"userId\");\n      const WebToken = window.localStorage.getItem(\"WebToken\");\n      // 先判断userId与token是否存在,或者userId是否伪造\n      if (!userId || !WebToken) {\n        this.$toast({\n          type: \"fail\",\n          message: \"请先登录\",\n          duration: 3000\n        });\n        // 清除token\n        window.localStorage.removeItem('WebToken');\n        // 清除userId\n        window.localStorage.removeItem('userId');\n        // 保存跳转前所处页面路径\n        // window.localStorage.setItem(\"fromPath\", this.$route.fullPath);\n        // setTimeout(() => {\n        //   this.$router.push(\"/login\");\n        // }, 1000);\n        return false;\n      }\n      // 判断userId与token是否伪造\n      // 这里如果userId是伪造，不会返回Ok，如果token是伪造，会返回401错误，由http拦截处理\n      // const { data } = await this.$http.get(`/oneUser/${userId}`)\n      // if (data.status !== 300) {\n      //   this.$toast({\n      //     type: \"fail\",\n      //     message: \"请先登录\",\n      //     duration: 3000,\n      //   });\n      //   // 清除token\n      //   window.localStorage.removeItem('WebToken')\n      //   // 清除userId\n      //   window.localStorage.removeItem('userId')\n      //   // 保存跳转前所处页面路径\n      //   // window.localStorage.setItem(\"fromPath\", this.$route.fullPath);\n      //   // setTimeout(() => {\n      //   //   this.$router.push(\"/login\");\n      //   // }, 1000);\n      //   return false\n      // }\n      return true;\n    }\n  }\n});\n\n// 定义全局过滤器\nimport { date } from './filter/dateFormate';\nVue.filter('date', date);\nnew Vue({\n  router,\n  render: h => h(App)\n}).$mount('#app');","map":{"version":3,"names":["Vue","Vant","use","App","router","Http","prototype","$http","config","productionTip","mixin","methods","isLogin","userId","window","localStorage","getItem","WebToken","$toast","type","message","duration","removeItem","date","filter","render","h","$mount"],"sources":["D:/WebSpace/SuDaMovie/suda/src/main.js"],"sourcesContent":["import Vue from 'vue'\r\n// 引入vant组件\r\nimport Vant from 'vant';\r\n// 引入vant样式\r\nimport 'vant/lib/index.css'\r\nVue.use(Vant)\r\nimport App from './App.vue'\r\n// 全局引用并使用轮播图组件\r\n// import VueAwesomeSwiper from 'vue-awesome-swiper'\r\nimport router from './router'\r\nimport Http from './http';\r\nVue.prototype.$http = Http\r\n// Vue.use(VueAwesomeSwiper, /* { default options with global component } */)\r\n\r\nVue.config.productionTip = false\r\n// 定义全局混入\r\nVue.mixin({\r\n  methods: {\r\n    // 判断是否登录\r\n    async isLogin() {\r\n      const userId = window.localStorage.getItem(\"userId\");\r\n      const WebToken = window.localStorage.getItem(\"WebToken\");\r\n      // 先判断userId与token是否存在,或者userId是否伪造\r\n      if (!userId || !WebToken) {\r\n        this.$toast({\r\n          type: \"fail\",\r\n          message: \"请先登录\",\r\n          duration: 3000,\r\n        });\r\n        // 清除token\r\n        window.localStorage.removeItem('WebToken')\r\n        // 清除userId\r\n        window.localStorage.removeItem('userId')\r\n        // 保存跳转前所处页面路径\r\n        // window.localStorage.setItem(\"fromPath\", this.$route.fullPath);\r\n        // setTimeout(() => {\r\n        //   this.$router.push(\"/login\");\r\n        // }, 1000);\r\n        return false\r\n      }\r\n      // 判断userId与token是否伪造\r\n      // 这里如果userId是伪造，不会返回Ok，如果token是伪造，会返回401错误，由http拦截处理\r\n      // const { data } = await this.$http.get(`/oneUser/${userId}`)\r\n      // if (data.status !== 300) {\r\n      //   this.$toast({\r\n      //     type: \"fail\",\r\n      //     message: \"请先登录\",\r\n      //     duration: 3000,\r\n      //   });\r\n      //   // 清除token\r\n      //   window.localStorage.removeItem('WebToken')\r\n      //   // 清除userId\r\n      //   window.localStorage.removeItem('userId')\r\n      //   // 保存跳转前所处页面路径\r\n      //   // window.localStorage.setItem(\"fromPath\", this.$route.fullPath);\r\n      //   // setTimeout(() => {\r\n      //   //   this.$router.push(\"/login\");\r\n      //   // }, 1000);\r\n      //   return false\r\n      // }\r\n      return true;\r\n    },\r\n  }\r\n})\r\n\r\n// 定义全局过滤器\r\nimport { date } from './filter/dateFormate'\r\nVue.filter('date', date)\r\nnew Vue({\r\n  router,\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB;AACA,OAAOC,IAAI,MAAM,MAAM;AACvB;AACA,OAAO,oBAAoB;AAC3BD,GAAG,CAACE,GAAG,CAACD,IAAI,CAAC;AACb,OAAOE,GAAG,MAAM,WAAW;AAC3B;AACA;AACA,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,IAAI,MAAM,QAAQ;AACzBL,GAAG,CAACM,SAAS,CAACC,KAAK,GAAGF,IAAI;AAC1B;;AAEAL,GAAG,CAACQ,MAAM,CAACC,aAAa,GAAG,KAAK;AAChC;AACAT,GAAG,CAACU,KAAK,CAAC;EACRC,OAAO,EAAE;IACP;IACA,MAAMC,OAAO,GAAG;MACd,MAAMC,MAAM,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;MACpD,MAAMC,QAAQ,GAAGH,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;MACxD;MACA,IAAI,CAACH,MAAM,IAAI,CAACI,QAAQ,EAAE;QACxB,IAAI,CAACC,MAAM,CAAC;UACVC,IAAI,EAAE,MAAM;UACZC,OAAO,EAAE,MAAM;UACfC,QAAQ,EAAE;QACZ,CAAC,CAAC;QACF;QACAP,MAAM,CAACC,YAAY,CAACO,UAAU,CAAC,UAAU,CAAC;QAC1C;QACAR,MAAM,CAACC,YAAY,CAACO,UAAU,CAAC,QAAQ,CAAC;QACxC;QACA;QACA;QACA;QACA;QACA,OAAO,KAAK;MACd;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,OAAO,IAAI;IACb;EACF;AACF,CAAC,CAAC;;AAEF;AACA,SAASC,IAAI,QAAQ,sBAAsB;AAC3CvB,GAAG,CAACwB,MAAM,CAAC,MAAM,EAAED,IAAI,CAAC;AACxB,IAAIvB,GAAG,CAAC;EACNI,MAAM;EACNqB,MAAM,EAAEC,CAAC,IAAIA,CAAC,CAACvB,GAAG;AACpB,CAAC,CAAC,CAACwB,MAAM,CAAC,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}