{"ast":null,"code":"import TopBar from \"@/components/TopBar.vue\";\nexport default {\n  name: \"MineInfo\",\n  data() {\n    return {\n      userId: \"\",\n      userInfo: \"\",\n      //用户信息\n      // 性别选择器与弹出框部分\n      showSexPicker: false,\n      columns: [\"男\", \"女\"],\n      // 昵称弹出框部分\n      showUsernamePicker: false,\n      selectDate: \"\",\n      // 修改密码弹出框部分\n      showUpdatePwdPicker: false,\n      // 修改密码部分\n      changePwd: {\n        oldPwd: \"\",\n        newPwd: \"\",\n        confirmPwd: \"\"\n      }\n    };\n  },\n  components: {\n    TopBar\n  },\n  methods: {\n    // 顶部返回按钮点击触发\n    backIconClick() {\n      this.$router.back();\n    },\n    // 获取用户信息\n    async getUserInfo() {\n      // 先判断是否为登录状态\n      if (await this.isLogin()) {\n        const userId = window.localStorage.getItem(\"userId\");\n        const {\n          data: {\n            userInfo\n          }\n        } = await this.$http.get(`/oneUser/${userId}`);\n        this.userInfo = userInfo;\n        console.log(userInfo);\n      }\n    },\n    // 上传文件函数\n    // async afterImage(file) {\n    //   // 此时可以自行将文件上传至服务器\n    //   // console.log(file);\n    //   let formData = new FormData();\n    //   formData.append(\"file\", file.file);\n    //   const {data} = await this.$http.post(\"/upload/avatar\", formData);\n    //   console.log(data);\n    //   this.userInfo.avatar = data.url;\n    //   // 更新数据\n    //   this.UpdataUserInfo();\n    // },\n    // 性别选择器部分\n    SexOnConfirm(value) {\n      this.userInfo.sex = value;\n      this.showSexPicker = false;\n    },\n    // 点击手机触发\n    phoneClick() {\n      this.$toast({\n        type: \"fail\",\n        message: \"手机号已用于注册，不可修改\"\n      });\n    },\n    // 生日选择器确定按钮触发\n\n    // 弹出层关闭触发，发送请求更新用户信息\n    async UpdateUserInfo() {\n      const {\n        data\n      } = await this.$http.put(`/oneUser/${this.userInfo._id}`, this.userInfo);\n      console.log(this.userInfo);\n      this.$toast({\n        type: \"success\",\n        message: data.message\n      });\n    },\n    // 退出登录\n\n    // 点击修改密码触发\n    async UpdataPwd() {\n      // 表单验证\n      if (!this.changePwd.oldPwd) {\n        return this.$toast({\n          type: \"fail\",\n          message: \"旧密码不可为空\",\n          duration: 1000\n        });\n      }\n      if (!this.changePwd.newPwd) {\n        return this.$toast({\n          type: \"fail\",\n          message: \"新密码不可为空\",\n          duration: 1000\n        });\n      }\n      if (!this.changePwd.confirmPwd) {\n        return this.$toast({\n          type: \"fail\",\n          message: \"确认密码不可为空\",\n          duration: 1000\n        });\n      }\n      if (this.changePwd.confirmPwd !== this.changePwd.newPwd) {\n        return this.$toast({\n          type: \"fail\",\n          message: \"新密码与确认密码不一致\",\n          duration: 1000\n        });\n      }\n      if (this.changePwd.oldPwd === this.changePwd.newPwd) {\n        return this.$toast({\n          type: \"fail\",\n          message: \"旧密码与新密码不能一致\",\n          duration: 1000\n        });\n      }\n      const {\n        data\n      } = await this.$http.post(`/oneUser/${this.userId}`, this.changePwd);\n      // 后台验证不通过，弹出错误信息\n      if (data.status !== \"Ok\") {\n        return this.$dialog.alert({\n          title: \"提示\",\n          message: data.message,\n          theme: \"round-button\",\n          confirmButtonColor: \"#fa209f\"\n        });\n      }\n      // 后台通过\n      return this.$toast({\n        type: \"success\",\n        message: data.message,\n        duration: 1000\n      });\n    }\n    // 修改密码弹出框关闭触发\n\n    // 后台验证不通过，弹出错误信息\n\n    // 后台通过\n  },\n\n  created() {\n    this.userId = window.localStorage.getItem(\"userId\");\n    this.getUserInfo();\n  }\n};","map":{"version":3,"mappings":"AAiIA;AACA;EACAA;EACAC;IACA;MACAC;MACAC;MAAA;MACA;MACAC;MACAC;MACA;MACAC;MACAC;MACA;MACAC;MACA;MACAC;QACAC;QACAC;QACAC;MACA;IACA;EACA;EACAC;IACAC;EACA;EACAC;IACA;IACAC;MACA;IACA;IACA;IACA;MACA;MACA;QACA;QACA;UACAf;YAAAE;UAAA;QACA;QACA;QACAc;MACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAC;MACA;MACA;IACA;IACA;IACAC;MACA;QACAC;QACAC;MACA;IACA;IACA;;IAEA;IACA;MACA;QAAApB;MAAA,yBACA,iCACA,cACA;MACAgB;MACA;QACAG;QACAC;MACA;IACA;IACA;;IAEA;IACA;MACA;MACA;QACA;UACAD;UACAC;UACAC;QACA;MACA;MACA;QACA;UACAF;UACAC;UACAC;QACA;MACA;MACA;QACA;UACAF;UACAC;UACAC;QACA;MACA;MACA;QACA;UACAF;UACAC;UACAC;QACA;MACA;MACA;QACA;UACAF;UACAC;UACAC;QACA;MACA;MACA;QAAArB;MAAA,0BACA,2BACA,eACA;MACA;MACA;QACA;UACAsB;UACAF;UACAG;UACAC;QACA;MACA;MACA;MACA;QACAL;QACAC;QACAC;MACA;IACA;IACA;;IAEA;;IAEA;EAEA;;EACAI;IACA;IACA;EACA;AACA","names":["name","data","userId","userInfo","showSexPicker","columns","showUsernamePicker","selectDate","showUpdatePwdPicker","changePwd","oldPwd","newPwd","confirmPwd","components","TopBar","methods","backIconClick","console","SexOnConfirm","phoneClick","type","message","duration","title","theme","confirmButtonColor","created"],"sourceRoot":"src/views","sources":["MineInfo.vue"],"sourcesContent":["<template>\n  <div class=\"MineInfo\">\n    <!-- 顶部topBar部分 -->\n    <TopBar bgc=\"#fff\" centerContent=\"我的资料\" @backIconClick=\"backIconClick\"></TopBar>\n    <div class=\"main\">\n      <!-- 头像 -->\n      <div class=\"avatar public\">\n        <div class=\"left\">\n          <span class=\"title\">头像</span>\n        </div>\n        <div class=\"right\">\n          <van-uploader >\n<!--            :after-read=\"afterImage\"-->\n            <img :src=\"userInfo.icon\" >\n          </van-uploader>\n<!--          <van-icon name=\"arrow\" />-->\n        </div>\n      </div>\n      <!-- 昵称 -->\n      <div class=\"name public\" @click=\"showUsernamePicker = true\">\n        <div class=\"left\">\n          <span>昵称</span>\n        </div>\n        <div class=\"right\">\n          <span> {{ userInfo.name }} </span>\n<!--          <van-icon name=\"arrow\" />-->\n        </div>\n      </div>\n<!--      <div class=\"right\">-->\n<!--        <van-icon name=\"arrow\" />-->\n<!--      </div>-->\n      <!-- 性别 -->\n      <div class=\"sex public\">\n        <div class=\"left\">\n          <span>性别</span>\n        </div>\n        <div class=\"right\">\n          <span>\n            <van-field\n                style=\"text-align: center\"\n                input-align=\"center\"\n                readonly\n                clickable\n                :value=\"userInfo.sex\"\n                placeholder=\"选择性别\"\n                @click=\"showSexPicker = true\"\n            />\n          </span>\n          <!--          <van-icon name=\"arrow\" />-->\n        </div>\n      </div>\n      <!-- 手机 -->\n      <div class=\"phone public\" @click=\"phoneClick\">\n        <div class=\"left\">\n          <span>手机</span>\n        </div>\n        <div class=\"right\">\n          <span> {{ userInfo.phone }} </span>\n          <!--          <van-icon name=\"arrow\" />-->\n        </div>\n      </div>\n    </div>\n\n    <!-- 按钮部分 -->\n    <div class=\"Btn\">\n      <!-- 修改密码按钮 -->\n      <van-button round type=\"info\" class=\"outBtn\" @click=\"\"\n        >修改密码</van-button\n      >\n      <!-- 退出登录按钮 -->\n      <van-button round type=\"info\" class=\"outBtn\"\n        >退出登录</van-button\n      >\n    </div>\n    <!-- 昵称部分弹出层 -->\n    <van-popup v-model=\"showUsernamePicker\" round @close=\"UpdateUserInfo\">\n      <van-field\n        style=\"width: 100%\"\n        v-model=\"userInfo.name\"\n        label=\"昵称\"\n        placeholder=\"请输入昵称\"\n        label-width=\"3rem\"\n      />\n    </van-popup>\n    <!-- 性别选择器弹出层 -->\n    <van-popup\n      v-model=\"showSexPicker\"\n      round\n      position=\"bottom\"\n      @close=\"UpdateUserInfo\"\n    >\n      <van-picker\n        show-toolbar\n        :columns=\"columns\"\n        @cancel=\"showSexPicker = false\"\n        @confirm=\"SexOnConfirm\"\n      />\n    </van-popup>\n    <!-- 修改密码部分弹出层 -->\n    <van-popup v-model=\"showUpdatePwdPicker\" round @close=\"UpdateUserInfo\">\n      <van-field\n        type=\"password\"\n        style=\"width: 80vw\"\n        label=\"旧密码\"\n        placeholder=\"请输入旧密码\"\n        label-width=\"5rem\"\n        v-model=\"changePwd.oldPwd\"\n      />\n      <van-field\n        type=\"password\"\n        style=\"width: 80vw\"\n        label=\"新密码\"\n        placeholder=\"请输入新密码\"\n        label-width=\"5rem\"\n        v-model=\"changePwd.newPwd\"\n      />\n      <van-field\n        type=\"password\"\n        style=\"width: 80vw\"\n        label=\"确认密码\"\n        placeholder=\"请再次输入新密码\"\n        label-width=\"5rem\"\n        v-model=\"changePwd.confirmPwd\"\n      />\n    </van-popup>\n  </div>\n</template>\n\n<script>\nimport TopBar from \"@/components/TopBar.vue\";\nexport default {\n  name: \"MineInfo\",\n  data() {\n    return {\n      userId: \"\",\n      userInfo: \"\", //用户信息\n      // 性别选择器与弹出框部分\n      showSexPicker: false,\n      columns: [\"男\", \"女\"],\n      // 昵称弹出框部分\n      showUsernamePicker: false,\n      selectDate: \"\",\n      // 修改密码弹出框部分\n      showUpdatePwdPicker: false,\n      // 修改密码部分\n      changePwd: {\n        oldPwd: \"\",\n        newPwd: \"\",\n        confirmPwd: \"\",\n      },\n    };\n  },\n  components: {\n    TopBar,\n  },\n  methods: {\n    // 顶部返回按钮点击触发\n    backIconClick() {\n      this.$router.back();\n    },\n    // 获取用户信息\n    async getUserInfo() {\n      // 先判断是否为登录状态\n      if (await this.isLogin()) {\n        const userId = window.localStorage.getItem(\"userId\");\n        const {\n          data: {userInfo}\n        } = await this.$http.get(`/oneUser/${userId}`)\n        this.userInfo = userInfo\n        console.log(userInfo)\n      }\n    },\n    // 上传文件函数\n    // async afterImage(file) {\n    //   // 此时可以自行将文件上传至服务器\n    //   // console.log(file);\n    //   let formData = new FormData();\n    //   formData.append(\"file\", file.file);\n    //   const {data} = await this.$http.post(\"/upload/avatar\", formData);\n    //   console.log(data);\n    //   this.userInfo.avatar = data.url;\n    //   // 更新数据\n    //   this.UpdataUserInfo();\n    // },\n    // 性别选择器部分\n    SexOnConfirm(value) {\n      this.userInfo.sex = value;\n      this.showSexPicker = false;\n    },\n    // 点击手机触发\n    phoneClick() {\n      this.$toast({\n        type: \"fail\",\n        message: \"手机号已用于注册，不可修改\",\n      });\n    },\n    // 生日选择器确定按钮触发\n\n    // 弹出层关闭触发，发送请求更新用户信息\n    async UpdateUserInfo() {\n      const { data } = await this.$http.put(\n          `/oneUser/${this.userInfo._id}`,\n          this.userInfo\n      );\n      console.log(this.userInfo)\n      this.$toast({\n        type: \"success\",\n        message: data.message,\n      });\n    },\n    // 退出登录\n\n    // 点击修改密码触发\n    async UpdataPwd() {\n      // 表单验证\n      if (!this.changePwd.oldPwd) {\n        return this.$toast({\n          type: \"fail\",\n          message: \"旧密码不可为空\",\n          duration: 1000,\n        });\n      }\n      if (!this.changePwd.newPwd) {\n        return this.$toast({\n          type: \"fail\",\n          message: \"新密码不可为空\",\n          duration: 1000,\n        });\n      }\n      if (!this.changePwd.confirmPwd) {\n        return this.$toast({\n          type: \"fail\",\n          message: \"确认密码不可为空\",\n          duration: 1000,\n        });\n      }\n      if (this.changePwd.confirmPwd !== this.changePwd.newPwd) {\n        return this.$toast({\n          type: \"fail\",\n          message: \"新密码与确认密码不一致\",\n          duration: 1000,\n        });\n      }\n      if (this.changePwd.oldPwd === this.changePwd.newPwd) {\n        return this.$toast({\n          type: \"fail\",\n          message: \"旧密码与新密码不能一致\",\n          duration: 1000,\n        });\n      }\n      const { data } = await this.$http.post(\n          `/oneUser/${this.userId}`,\n          this.changePwd\n      );\n      // 后台验证不通过，弹出错误信息\n      if (data.status !== \"Ok\") {\n        return this.$dialog.alert({\n          title: \"提示\",\n          message: data.message,\n          theme: \"round-button\",\n          confirmButtonColor: \"#fa209f\",\n        });\n      }\n      // 后台通过\n      return this.$toast({\n        type: \"success\",\n        message: data.message,\n        duration: 1000,\n      });\n    },\n    // 修改密码弹出框关闭触发\n\n    // 后台验证不通过，弹出错误信息\n\n    // 后台通过\n\n  },\n  created() {\n    this.userId = window.localStorage.getItem(\"userId\");\n    this.getUserInfo();\n  },\n}\n</script>\n<style lang=\"less\" scoped>\n// 最外层容器\n.MineInfo {\n  background-color: #fff;\n  height: 100vh;\n  width: 100vw;\n}\n// 公共部分代码\n.public {\n  display: flex;\n  justify-content: space-between;\n  font-size: 1.2308rem;\n  border-bottom: 0.0769rem solid #ccc;\n  padding: 1.5385rem 0;\n}\n// 主体内容区域\n.main {\n  width: 100%;\n  margin-top: 1.7rem;\n  .public{\n    //padding: 1.2692rem 0;\n    .left{\n      width: 75%;\n      display: flex;\n      align-items: center;\n      text-align: left;\n      margin-left: 1.5rem;\n    };\n    .right{\n      display: flex;\n      width: 25%;\n      margin-right: 2.5rem;\n      text-align: center;\n      align-items: center;\n      justify-content: center;\n      img {\n        width: 5.3846rem;\n        height: 5.3846rem;\n        border-radius: 100%;\n      };\n    }\n  }\n  // 头像部分\n  .avatar {\n    .left {\n      .title {\n        width: 20%;\n      }\n      .content {\n        width: 80%;\n      }\n    }\n  }\n  // 性别部分\n  .sex {\n    padding: 0.9385rem 0;\n    .left {\n      flex: 1;\n      display: flex;\n      align-items: center;\n    }\n  }\n}\n// 按钮部分样式\n.Btn {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 2.3077rem;\n  // 退出登录按钮样式\n  // margin: 0.3846rem 0;\n  .outBtn {\n    margin-top: 0.7692rem;\n    width: 90%;\n  }\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}