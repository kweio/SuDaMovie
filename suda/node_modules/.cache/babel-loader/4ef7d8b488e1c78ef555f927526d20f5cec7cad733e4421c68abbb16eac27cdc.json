{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.unshift.js\");\nconst path = require('path');\nconst childProcess = require('child_process');\nconst crossSpawn = require('cross-spawn');\nconst stripEof = require('strip-eof');\nconst npmRunPath = require('npm-run-path');\nconst isStream = require('is-stream');\nconst _getStream = require('get-stream');\nconst pFinally = require('p-finally');\nconst onExit = require('signal-exit');\nconst errname = require('./lib/errname');\nconst stdio = require('./lib/stdio');\nconst TEN_MEGABYTES = 1000 * 1000 * 10;\nfunction handleArgs(cmd, args, opts) {\n  let parsed;\n  opts = Object.assign({\n    extendEnv: true,\n    env: {}\n  }, opts);\n  if (opts.extendEnv) {\n    opts.env = Object.assign({}, process.env, opts.env);\n  }\n  if (opts.__winShell === true) {\n    delete opts.__winShell;\n    parsed = {\n      command: cmd,\n      args,\n      options: opts,\n      file: cmd,\n      original: {\n        cmd,\n        args\n      }\n    };\n  } else {\n    parsed = crossSpawn._parse(cmd, args, opts);\n  }\n  opts = Object.assign({\n    maxBuffer: TEN_MEGABYTES,\n    buffer: true,\n    stripEof: true,\n    preferLocal: true,\n    localDir: parsed.options.cwd || process.cwd(),\n    encoding: 'utf8',\n    reject: true,\n    cleanup: true\n  }, parsed.options);\n  opts.stdio = stdio(opts);\n  if (opts.preferLocal) {\n    opts.env = npmRunPath.env(Object.assign({}, opts, {\n      cwd: opts.localDir\n    }));\n  }\n  if (opts.detached) {\n    // #115\n    opts.cleanup = false;\n  }\n  if (process.platform === 'win32' && path.basename(parsed.command) === 'cmd.exe') {\n    // #116\n    parsed.args.unshift('/q');\n  }\n  return {\n    cmd: parsed.command,\n    args: parsed.args,\n    opts,\n    parsed\n  };\n}\nfunction handleInput(spawned, input) {\n  if (input === null || input === undefined) {\n    return;\n  }\n  if (isStream(input)) {\n    input.pipe(spawned.stdin);\n  } else {\n    spawned.stdin.end(input);\n  }\n}\nfunction handleOutput(opts, val) {\n  if (val && opts.stripEof) {\n    val = stripEof(val);\n  }\n  return val;\n}\nfunction handleShell(fn, cmd, opts) {\n  let file = '/bin/sh';\n  let args = ['-c', cmd];\n  opts = Object.assign({}, opts);\n  if (process.platform === 'win32') {\n    opts.__winShell = true;\n    file = process.env.comspec || 'cmd.exe';\n    args = ['/s', '/c', `\"${cmd}\"`];\n    opts.windowsVerbatimArguments = true;\n  }\n  if (opts.shell) {\n    file = opts.shell;\n    delete opts.shell;\n  }\n  return fn(file, args, opts);\n}\nfunction getStream(process, stream, {\n  encoding,\n  buffer,\n  maxBuffer\n}) {\n  if (!process[stream]) {\n    return null;\n  }\n  let ret;\n  if (!buffer) {\n    // TODO: Use `ret = util.promisify(stream.finished)(process[stream]);` when targeting Node.js 10\n    ret = new Promise((resolve, reject) => {\n      process[stream].once('end', resolve).once('error', reject);\n    });\n  } else if (encoding) {\n    ret = _getStream(process[stream], {\n      encoding,\n      maxBuffer\n    });\n  } else {\n    ret = _getStream.buffer(process[stream], {\n      maxBuffer\n    });\n  }\n  return ret.catch(err => {\n    err.stream = stream;\n    err.message = `${stream} ${err.message}`;\n    throw err;\n  });\n}\nfunction makeError(result, options) {\n  const {\n    stdout,\n    stderr\n  } = result;\n  let err = result.error;\n  const {\n    code,\n    signal\n  } = result;\n  const {\n    parsed,\n    joinedCmd\n  } = options;\n  const timedOut = options.timedOut || false;\n  if (!err) {\n    let output = '';\n    if (Array.isArray(parsed.opts.stdio)) {\n      if (parsed.opts.stdio[2] !== 'inherit') {\n        output += output.length > 0 ? stderr : `\\n${stderr}`;\n      }\n      if (parsed.opts.stdio[1] !== 'inherit') {\n        output += `\\n${stdout}`;\n      }\n    } else if (parsed.opts.stdio !== 'inherit') {\n      output = `\\n${stderr}${stdout}`;\n    }\n    err = new Error(`Command failed: ${joinedCmd}${output}`);\n    err.code = code < 0 ? errname(code) : code;\n  }\n  err.stdout = stdout;\n  err.stderr = stderr;\n  err.failed = true;\n  err.signal = signal || null;\n  err.cmd = joinedCmd;\n  err.timedOut = timedOut;\n  return err;\n}\nfunction joinCmd(cmd, args) {\n  let joinedCmd = cmd;\n  if (Array.isArray(args) && args.length > 0) {\n    joinedCmd += ' ' + args.join(' ');\n  }\n  return joinedCmd;\n}\nmodule.exports = (cmd, args, opts) => {\n  const parsed = handleArgs(cmd, args, opts);\n  const {\n    encoding,\n    buffer,\n    maxBuffer\n  } = parsed.opts;\n  const joinedCmd = joinCmd(cmd, args);\n  let spawned;\n  try {\n    spawned = childProcess.spawn(parsed.cmd, parsed.args, parsed.opts);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n  let removeExitHandler;\n  if (parsed.opts.cleanup) {\n    removeExitHandler = onExit(() => {\n      spawned.kill();\n    });\n  }\n  let timeoutId = null;\n  let timedOut = false;\n  const cleanup = () => {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n      timeoutId = null;\n    }\n    if (removeExitHandler) {\n      removeExitHandler();\n    }\n  };\n  if (parsed.opts.timeout > 0) {\n    timeoutId = setTimeout(() => {\n      timeoutId = null;\n      timedOut = true;\n      spawned.kill(parsed.opts.killSignal);\n    }, parsed.opts.timeout);\n  }\n  const processDone = new Promise(resolve => {\n    spawned.on('exit', (code, signal) => {\n      cleanup();\n      resolve({\n        code,\n        signal\n      });\n    });\n    spawned.on('error', err => {\n      cleanup();\n      resolve({\n        error: err\n      });\n    });\n    if (spawned.stdin) {\n      spawned.stdin.on('error', err => {\n        cleanup();\n        resolve({\n          error: err\n        });\n      });\n    }\n  });\n  function destroy() {\n    if (spawned.stdout) {\n      spawned.stdout.destroy();\n    }\n    if (spawned.stderr) {\n      spawned.stderr.destroy();\n    }\n  }\n  const handlePromise = () => pFinally(Promise.all([processDone, getStream(spawned, 'stdout', {\n    encoding,\n    buffer,\n    maxBuffer\n  }), getStream(spawned, 'stderr', {\n    encoding,\n    buffer,\n    maxBuffer\n  })]).then(arr => {\n    const result = arr[0];\n    result.stdout = arr[1];\n    result.stderr = arr[2];\n    if (result.error || result.code !== 0 || result.signal !== null) {\n      const err = makeError(result, {\n        joinedCmd,\n        parsed,\n        timedOut\n      });\n\n      // TODO: missing some timeout logic for killed\n      // https://github.com/nodejs/node/blob/master/lib/child_process.js#L203\n      // err.killed = spawned.killed || killed;\n      err.killed = err.killed || spawned.killed;\n      if (!parsed.opts.reject) {\n        return err;\n      }\n      throw err;\n    }\n    return {\n      stdout: handleOutput(parsed.opts, result.stdout),\n      stderr: handleOutput(parsed.opts, result.stderr),\n      code: 0,\n      failed: false,\n      killed: false,\n      signal: null,\n      cmd: joinedCmd,\n      timedOut: false\n    };\n  }), destroy);\n  crossSpawn._enoent.hookChildProcess(spawned, parsed.parsed);\n  handleInput(spawned, parsed.opts.input);\n  spawned.then = (onfulfilled, onrejected) => handlePromise().then(onfulfilled, onrejected);\n  spawned.catch = onrejected => handlePromise().catch(onrejected);\n  return spawned;\n};\n\n// TODO: set `stderr: 'ignore'` when that option is implemented\nmodule.exports.stdout = (...args) => module.exports(...args).then(x => x.stdout);\n\n// TODO: set `stdout: 'ignore'` when that option is implemented\nmodule.exports.stderr = (...args) => module.exports(...args).then(x => x.stderr);\nmodule.exports.shell = (cmd, opts) => handleShell(module.exports, cmd, opts);\nmodule.exports.sync = (cmd, args, opts) => {\n  const parsed = handleArgs(cmd, args, opts);\n  const joinedCmd = joinCmd(cmd, args);\n  if (isStream(parsed.opts.input)) {\n    throw new TypeError('The `input` option cannot be a stream in sync mode');\n  }\n  const result = childProcess.spawnSync(parsed.cmd, parsed.args, parsed.opts);\n  result.code = result.status;\n  if (result.error || result.status !== 0 || result.signal !== null) {\n    const err = makeError(result, {\n      joinedCmd,\n      parsed\n    });\n    if (!parsed.opts.reject) {\n      return err;\n    }\n    throw err;\n  }\n  return {\n    stdout: handleOutput(parsed.opts, result.stdout),\n    stderr: handleOutput(parsed.opts, result.stderr),\n    code: 0,\n    failed: false,\n    signal: null,\n    cmd: joinedCmd,\n    timedOut: false\n  };\n};\nmodule.exports.shellSync = (cmd, opts) => handleShell(module.exports.sync, cmd, opts);","map":{"version":3,"names":["path","require","childProcess","crossSpawn","stripEof","npmRunPath","isStream","_getStream","pFinally","onExit","errname","stdio","TEN_MEGABYTES","handleArgs","cmd","args","opts","parsed","Object","assign","extendEnv","env","process","__winShell","command","options","file","original","_parse","maxBuffer","buffer","preferLocal","localDir","cwd","encoding","reject","cleanup","detached","platform","basename","unshift","handleInput","spawned","input","undefined","pipe","stdin","end","handleOutput","val","handleShell","fn","comspec","windowsVerbatimArguments","shell","getStream","stream","ret","Promise","resolve","once","catch","err","message","makeError","result","stdout","stderr","error","code","signal","joinedCmd","timedOut","output","Array","isArray","length","Error","failed","joinCmd","join","module","exports","spawn","removeExitHandler","kill","timeoutId","clearTimeout","timeout","setTimeout","killSignal","processDone","on","destroy","handlePromise","all","then","arr","killed","_enoent","hookChildProcess","onfulfilled","onrejected","x","sync","TypeError","spawnSync","status","shellSync"],"sources":["D:/WebSpace/SuDaMovie/suda/node_modules/execa/index.js"],"sourcesContent":["'use strict';\nconst path = require('path');\nconst childProcess = require('child_process');\nconst crossSpawn = require('cross-spawn');\nconst stripEof = require('strip-eof');\nconst npmRunPath = require('npm-run-path');\nconst isStream = require('is-stream');\nconst _getStream = require('get-stream');\nconst pFinally = require('p-finally');\nconst onExit = require('signal-exit');\nconst errname = require('./lib/errname');\nconst stdio = require('./lib/stdio');\n\nconst TEN_MEGABYTES = 1000 * 1000 * 10;\n\nfunction handleArgs(cmd, args, opts) {\n\tlet parsed;\n\n\topts = Object.assign({\n\t\textendEnv: true,\n\t\tenv: {}\n\t}, opts);\n\n\tif (opts.extendEnv) {\n\t\topts.env = Object.assign({}, process.env, opts.env);\n\t}\n\n\tif (opts.__winShell === true) {\n\t\tdelete opts.__winShell;\n\t\tparsed = {\n\t\t\tcommand: cmd,\n\t\t\targs,\n\t\t\toptions: opts,\n\t\t\tfile: cmd,\n\t\t\toriginal: {\n\t\t\t\tcmd,\n\t\t\t\targs\n\t\t\t}\n\t\t};\n\t} else {\n\t\tparsed = crossSpawn._parse(cmd, args, opts);\n\t}\n\n\topts = Object.assign({\n\t\tmaxBuffer: TEN_MEGABYTES,\n\t\tbuffer: true,\n\t\tstripEof: true,\n\t\tpreferLocal: true,\n\t\tlocalDir: parsed.options.cwd || process.cwd(),\n\t\tencoding: 'utf8',\n\t\treject: true,\n\t\tcleanup: true\n\t}, parsed.options);\n\n\topts.stdio = stdio(opts);\n\n\tif (opts.preferLocal) {\n\t\topts.env = npmRunPath.env(Object.assign({}, opts, {cwd: opts.localDir}));\n\t}\n\n\tif (opts.detached) {\n\t\t// #115\n\t\topts.cleanup = false;\n\t}\n\n\tif (process.platform === 'win32' && path.basename(parsed.command) === 'cmd.exe') {\n\t\t// #116\n\t\tparsed.args.unshift('/q');\n\t}\n\n\treturn {\n\t\tcmd: parsed.command,\n\t\targs: parsed.args,\n\t\topts,\n\t\tparsed\n\t};\n}\n\nfunction handleInput(spawned, input) {\n\tif (input === null || input === undefined) {\n\t\treturn;\n\t}\n\n\tif (isStream(input)) {\n\t\tinput.pipe(spawned.stdin);\n\t} else {\n\t\tspawned.stdin.end(input);\n\t}\n}\n\nfunction handleOutput(opts, val) {\n\tif (val && opts.stripEof) {\n\t\tval = stripEof(val);\n\t}\n\n\treturn val;\n}\n\nfunction handleShell(fn, cmd, opts) {\n\tlet file = '/bin/sh';\n\tlet args = ['-c', cmd];\n\n\topts = Object.assign({}, opts);\n\n\tif (process.platform === 'win32') {\n\t\topts.__winShell = true;\n\t\tfile = process.env.comspec || 'cmd.exe';\n\t\targs = ['/s', '/c', `\"${cmd}\"`];\n\t\topts.windowsVerbatimArguments = true;\n\t}\n\n\tif (opts.shell) {\n\t\tfile = opts.shell;\n\t\tdelete opts.shell;\n\t}\n\n\treturn fn(file, args, opts);\n}\n\nfunction getStream(process, stream, {encoding, buffer, maxBuffer}) {\n\tif (!process[stream]) {\n\t\treturn null;\n\t}\n\n\tlet ret;\n\n\tif (!buffer) {\n\t\t// TODO: Use `ret = util.promisify(stream.finished)(process[stream]);` when targeting Node.js 10\n\t\tret = new Promise((resolve, reject) => {\n\t\t\tprocess[stream]\n\t\t\t\t.once('end', resolve)\n\t\t\t\t.once('error', reject);\n\t\t});\n\t} else if (encoding) {\n\t\tret = _getStream(process[stream], {\n\t\t\tencoding,\n\t\t\tmaxBuffer\n\t\t});\n\t} else {\n\t\tret = _getStream.buffer(process[stream], {maxBuffer});\n\t}\n\n\treturn ret.catch(err => {\n\t\terr.stream = stream;\n\t\terr.message = `${stream} ${err.message}`;\n\t\tthrow err;\n\t});\n}\n\nfunction makeError(result, options) {\n\tconst {stdout, stderr} = result;\n\n\tlet err = result.error;\n\tconst {code, signal} = result;\n\n\tconst {parsed, joinedCmd} = options;\n\tconst timedOut = options.timedOut || false;\n\n\tif (!err) {\n\t\tlet output = '';\n\n\t\tif (Array.isArray(parsed.opts.stdio)) {\n\t\t\tif (parsed.opts.stdio[2] !== 'inherit') {\n\t\t\t\toutput += output.length > 0 ? stderr : `\\n${stderr}`;\n\t\t\t}\n\n\t\t\tif (parsed.opts.stdio[1] !== 'inherit') {\n\t\t\t\toutput += `\\n${stdout}`;\n\t\t\t}\n\t\t} else if (parsed.opts.stdio !== 'inherit') {\n\t\t\toutput = `\\n${stderr}${stdout}`;\n\t\t}\n\n\t\terr = new Error(`Command failed: ${joinedCmd}${output}`);\n\t\terr.code = code < 0 ? errname(code) : code;\n\t}\n\n\terr.stdout = stdout;\n\terr.stderr = stderr;\n\terr.failed = true;\n\terr.signal = signal || null;\n\terr.cmd = joinedCmd;\n\terr.timedOut = timedOut;\n\n\treturn err;\n}\n\nfunction joinCmd(cmd, args) {\n\tlet joinedCmd = cmd;\n\n\tif (Array.isArray(args) && args.length > 0) {\n\t\tjoinedCmd += ' ' + args.join(' ');\n\t}\n\n\treturn joinedCmd;\n}\n\nmodule.exports = (cmd, args, opts) => {\n\tconst parsed = handleArgs(cmd, args, opts);\n\tconst {encoding, buffer, maxBuffer} = parsed.opts;\n\tconst joinedCmd = joinCmd(cmd, args);\n\n\tlet spawned;\n\ttry {\n\t\tspawned = childProcess.spawn(parsed.cmd, parsed.args, parsed.opts);\n\t} catch (err) {\n\t\treturn Promise.reject(err);\n\t}\n\n\tlet removeExitHandler;\n\tif (parsed.opts.cleanup) {\n\t\tremoveExitHandler = onExit(() => {\n\t\t\tspawned.kill();\n\t\t});\n\t}\n\n\tlet timeoutId = null;\n\tlet timedOut = false;\n\n\tconst cleanup = () => {\n\t\tif (timeoutId) {\n\t\t\tclearTimeout(timeoutId);\n\t\t\ttimeoutId = null;\n\t\t}\n\n\t\tif (removeExitHandler) {\n\t\t\tremoveExitHandler();\n\t\t}\n\t};\n\n\tif (parsed.opts.timeout > 0) {\n\t\ttimeoutId = setTimeout(() => {\n\t\t\ttimeoutId = null;\n\t\t\ttimedOut = true;\n\t\t\tspawned.kill(parsed.opts.killSignal);\n\t\t}, parsed.opts.timeout);\n\t}\n\n\tconst processDone = new Promise(resolve => {\n\t\tspawned.on('exit', (code, signal) => {\n\t\t\tcleanup();\n\t\t\tresolve({code, signal});\n\t\t});\n\n\t\tspawned.on('error', err => {\n\t\t\tcleanup();\n\t\t\tresolve({error: err});\n\t\t});\n\n\t\tif (spawned.stdin) {\n\t\t\tspawned.stdin.on('error', err => {\n\t\t\t\tcleanup();\n\t\t\t\tresolve({error: err});\n\t\t\t});\n\t\t}\n\t});\n\n\tfunction destroy() {\n\t\tif (spawned.stdout) {\n\t\t\tspawned.stdout.destroy();\n\t\t}\n\n\t\tif (spawned.stderr) {\n\t\t\tspawned.stderr.destroy();\n\t\t}\n\t}\n\n\tconst handlePromise = () => pFinally(Promise.all([\n\t\tprocessDone,\n\t\tgetStream(spawned, 'stdout', {encoding, buffer, maxBuffer}),\n\t\tgetStream(spawned, 'stderr', {encoding, buffer, maxBuffer})\n\t]).then(arr => {\n\t\tconst result = arr[0];\n\t\tresult.stdout = arr[1];\n\t\tresult.stderr = arr[2];\n\n\t\tif (result.error || result.code !== 0 || result.signal !== null) {\n\t\t\tconst err = makeError(result, {\n\t\t\t\tjoinedCmd,\n\t\t\t\tparsed,\n\t\t\t\ttimedOut\n\t\t\t});\n\n\t\t\t// TODO: missing some timeout logic for killed\n\t\t\t// https://github.com/nodejs/node/blob/master/lib/child_process.js#L203\n\t\t\t// err.killed = spawned.killed || killed;\n\t\t\terr.killed = err.killed || spawned.killed;\n\n\t\t\tif (!parsed.opts.reject) {\n\t\t\t\treturn err;\n\t\t\t}\n\n\t\t\tthrow err;\n\t\t}\n\n\t\treturn {\n\t\t\tstdout: handleOutput(parsed.opts, result.stdout),\n\t\t\tstderr: handleOutput(parsed.opts, result.stderr),\n\t\t\tcode: 0,\n\t\t\tfailed: false,\n\t\t\tkilled: false,\n\t\t\tsignal: null,\n\t\t\tcmd: joinedCmd,\n\t\t\ttimedOut: false\n\t\t};\n\t}), destroy);\n\n\tcrossSpawn._enoent.hookChildProcess(spawned, parsed.parsed);\n\n\thandleInput(spawned, parsed.opts.input);\n\n\tspawned.then = (onfulfilled, onrejected) => handlePromise().then(onfulfilled, onrejected);\n\tspawned.catch = onrejected => handlePromise().catch(onrejected);\n\n\treturn spawned;\n};\n\n// TODO: set `stderr: 'ignore'` when that option is implemented\nmodule.exports.stdout = (...args) => module.exports(...args).then(x => x.stdout);\n\n// TODO: set `stdout: 'ignore'` when that option is implemented\nmodule.exports.stderr = (...args) => module.exports(...args).then(x => x.stderr);\n\nmodule.exports.shell = (cmd, opts) => handleShell(module.exports, cmd, opts);\n\nmodule.exports.sync = (cmd, args, opts) => {\n\tconst parsed = handleArgs(cmd, args, opts);\n\tconst joinedCmd = joinCmd(cmd, args);\n\n\tif (isStream(parsed.opts.input)) {\n\t\tthrow new TypeError('The `input` option cannot be a stream in sync mode');\n\t}\n\n\tconst result = childProcess.spawnSync(parsed.cmd, parsed.args, parsed.opts);\n\tresult.code = result.status;\n\n\tif (result.error || result.status !== 0 || result.signal !== null) {\n\t\tconst err = makeError(result, {\n\t\t\tjoinedCmd,\n\t\t\tparsed\n\t\t});\n\n\t\tif (!parsed.opts.reject) {\n\t\t\treturn err;\n\t\t}\n\n\t\tthrow err;\n\t}\n\n\treturn {\n\t\tstdout: handleOutput(parsed.opts, result.stdout),\n\t\tstderr: handleOutput(parsed.opts, result.stderr),\n\t\tcode: 0,\n\t\tfailed: false,\n\t\tsignal: null,\n\t\tcmd: joinedCmd,\n\t\ttimedOut: false\n\t};\n};\n\nmodule.exports.shellSync = (cmd, opts) => handleShell(module.exports.sync, cmd, opts);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}