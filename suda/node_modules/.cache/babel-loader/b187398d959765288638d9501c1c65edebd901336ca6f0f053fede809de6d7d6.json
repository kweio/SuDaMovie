{"ast":null,"code":"export default {\n  name: \"SIdentify\",\n  props: {\n    identifyCode: {\n      type: String,\n      default: \"1234\"\n    },\n    fontSizeMin: {\n      type: Number,\n      default: 25\n    },\n    fontSizeMax: {\n      type: Number,\n      default: 30\n    },\n    backgroundColorMin: {\n      type: Number,\n      default: 255\n    },\n    backgroundColorMax: {\n      type: Number,\n      default: 255\n    },\n    colorMin: {\n      type: Number,\n      default: 0\n    },\n    colorMax: {\n      type: Number,\n      default: 160\n    },\n    lineColorMin: {\n      type: Number,\n      default: 100\n    },\n    lineColorMax: {\n      type: Number,\n      default: 255\n    },\n    dotColorMin: {\n      type: Number,\n      default: 0\n    },\n    dotColorMax: {\n      type: Number,\n      default: 255\n    },\n    contentWidth: {\n      type: Number,\n      default: 112\n    },\n    contentHeight: {\n      type: Number,\n      default: 31\n    }\n  },\n  methods: {\n    // 生成一个随机数\n    randomNum(min, max) {\n      return Math.floor(Math.random() * (max - min) + min);\n    },\n    // 生成一个随机的颜色\n    randomColor(min, max) {\n      let r = this.randomNum(min, max);\n      let g = this.randomNum(min, max);\n      let b = this.randomNum(min, max);\n      return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n    },\n    drawPic() {\n      let canvas = document.getElementById(\"s-canvas\");\n      let ctx = canvas.getContext(\"2d\");\n      ctx.textBaseline = \"bottom\";\n      // 绘制背景\n      // ctx.fillStyle = this.randomColor(\n      //   this.backgroundColorMin,\n      //   this.backgroundColorMax\n      // );\n      // ctx.fillRect(0, 0, this.contentWidth, this.contentHeight);\n      // 绘制文字\n      for (let i = 0; i < this.identifyCode.length; i++) {\n        this.drawText(ctx, this.identifyCode[i], i);\n      }\n      this.drawLine(ctx);\n      this.drawDot(ctx);\n    },\n    drawText(ctx, txt, i) {\n      ctx.fillStyle = this.randomColor(this.colorMin, this.colorMax);\n      ctx.font = this.randomNum(this.fontSizeMin, this.fontSizeMax) + \"px SimHei\";\n      let x = (i + 1) * (this.contentWidth / (this.identifyCode.length + 1));\n      let y = this.randomNum(this.fontSizeMax, this.contentHeight - 5);\n      var deg = this.randomNum(-45, 45);\n      // 修改坐标原点和旋转角度\n      ctx.translate(x, y);\n      ctx.rotate(deg * Math.PI / 180);\n      ctx.fillText(txt, 0, 0);\n      // 恢复坐标原点和旋转角度\n      ctx.rotate(-deg * Math.PI / 180);\n      ctx.translate(-x, -y);\n    },\n    drawLine(ctx) {\n      // 绘制干扰线\n      for (let i = 0; i < 5; i++) {\n        ctx.strokeStyle = this.randomColor(this.lineColorMin, this.lineColorMax);\n        ctx.beginPath();\n        ctx.moveTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight));\n        ctx.lineTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight));\n        ctx.stroke();\n      }\n    },\n    drawDot(ctx) {\n      // 绘制干扰点\n      for (let i = 0; i < 80; i++) {\n        ctx.fillStyle = this.randomColor(0, 255);\n        ctx.beginPath();\n        ctx.arc(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight), 1, 0, 2 * Math.PI);\n        ctx.fill();\n      }\n    }\n  },\n  watch: {\n    identifyCode() {\n      this.drawPic();\n    }\n  },\n  mounted() {\n    this.drawPic();\n  }\n};","map":{"version":3,"mappings":"AAWA;EACAA;EACAC;IACAC;MACAC;MACAC;IACA;IACAC;MACAF;MACAC;IACA;IACAE;MACAH;MACAC;IACA;IACAG;MACAJ;MACAC;IACA;IACAI;MACAL;MACAC;IACA;IACAK;MACAN;MACAC;IACA;IACAM;MACAP;MACAC;IACA;IACAO;MACAR;MACAC;IACA;IACAQ;MACAT;MACAC;IACA;IACAS;MACAV;MACAC;IACA;IACAU;MACAX;MACAC;IACA;IACAW;MACAZ;MACAC;IACA;IACAY;MACAb;MACAC;IACA;EACA;EACAa;IACA;IACAC;MACA;IACA;IACA;IACAC;MACA;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;MACAC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;QACA;MACA;MACA;MACA;IACA;IACAC;MACAD;MACAA,WACA;MACA;MACA;MACA;MACA;MACAA;MACAA;MACAA;MACA;MACAA;MACAA;IACA;IACAE;MACA;MACA;QACAF,mCACA,mBACA,kBACA;QACAA;QACAA,WACA,sCACA,sCACA;QACAA,WACA,sCACA,sCACA;QACAA;MACA;IACA;IACAG;MACA;MACA;QACAH;QACAA;QACAA,QACA,sCACA,uCACA,GACA,GACA,YACA;QACAA;MACA;IACA;EACA;EACAI;IACAvB;MACA;IACA;EACA;EACAwB;IACA;EACA;AACA","names":["name","props","identifyCode","type","default","fontSizeMin","fontSizeMax","backgroundColorMin","backgroundColorMax","colorMin","colorMax","lineColorMin","lineColorMax","dotColorMin","dotColorMax","contentWidth","contentHeight","methods","randomNum","randomColor","drawPic","ctx","drawText","drawLine","drawDot","watch","mounted"],"sourceRoot":"src/components","sources":["SIdentify.vue"],"sourcesContent":["<template>\n  <div class=\"s-canvas\">\n    <canvas\n      id=\"s-canvas\"\n      :width=\"contentWidth\"\n      :height=\"contentHeight\"\n    ></canvas>\n  </div>\n</template>\n \n<script>\nexport default {\n  name: \"SIdentify\",\n  props: {\n    identifyCode: {\n      type: String,\n      default: \"1234\",\n    },\n    fontSizeMin: {\n      type: Number,\n      default: 25,\n    },\n    fontSizeMax: {\n      type: Number,\n      default: 30,\n    },\n    backgroundColorMin: {\n      type: Number,\n      default: 255,\n    },\n    backgroundColorMax: {\n      type: Number,\n      default: 255,\n    },\n    colorMin: {\n      type: Number,\n      default: 0,\n    },\n    colorMax: {\n      type: Number,\n      default: 160,\n    },\n    lineColorMin: {\n      type: Number,\n      default: 100,\n    },\n    lineColorMax: {\n      type: Number,\n      default: 255,\n    },\n    dotColorMin: {\n      type: Number,\n      default: 0,\n    },\n    dotColorMax: {\n      type: Number,\n      default: 255,\n    },\n    contentWidth: {\n      type: Number,\n      default: 112,\n    },\n    contentHeight: {\n      type: Number,\n      default: 31,\n    },\n  },\n  methods: {\n    // 生成一个随机数\n    randomNum(min, max) {\n      return Math.floor(Math.random() * (max - min) + min);\n    },\n    // 生成一个随机的颜色\n    randomColor(min, max) {\n      let r = this.randomNum(min, max);\n      let g = this.randomNum(min, max);\n      let b = this.randomNum(min, max);\n      return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n    },\n    drawPic() {\n      let canvas = document.getElementById(\"s-canvas\");\n      let ctx = canvas.getContext(\"2d\");\n      ctx.textBaseline = \"bottom\";\n      // 绘制背景\n      // ctx.fillStyle = this.randomColor(\n      //   this.backgroundColorMin,\n      //   this.backgroundColorMax\n      // );\n      // ctx.fillRect(0, 0, this.contentWidth, this.contentHeight);\n      // 绘制文字\n      for (let i = 0; i < this.identifyCode.length; i++) {\n        this.drawText(ctx, this.identifyCode[i], i);\n      }\n      this.drawLine(ctx);\n      this.drawDot(ctx);\n    },\n    drawText(ctx, txt, i) {\n      ctx.fillStyle = this.randomColor(this.colorMin, this.colorMax);\n      ctx.font =\n        this.randomNum(this.fontSizeMin, this.fontSizeMax) + \"px SimHei\";\n      let x = (i + 1) * (this.contentWidth / (this.identifyCode.length + 1));\n      let y = this.randomNum(this.fontSizeMax, this.contentHeight - 5);\n      var deg = this.randomNum(-45, 45);\n      // 修改坐标原点和旋转角度\n      ctx.translate(x, y);\n      ctx.rotate((deg * Math.PI) / 180);\n      ctx.fillText(txt, 0, 0);\n      // 恢复坐标原点和旋转角度\n      ctx.rotate((-deg * Math.PI) / 180);\n      ctx.translate(-x, -y);\n    },\n    drawLine(ctx) {\n      // 绘制干扰线\n      for (let i = 0; i < 5; i++) {\n        ctx.strokeStyle = this.randomColor(\n          this.lineColorMin,\n          this.lineColorMax\n        );\n        ctx.beginPath();\n        ctx.moveTo(\n          this.randomNum(0, this.contentWidth),\n          this.randomNum(0, this.contentHeight)\n        );\n        ctx.lineTo(\n          this.randomNum(0, this.contentWidth),\n          this.randomNum(0, this.contentHeight)\n        );\n        ctx.stroke();\n      }\n    },\n    drawDot(ctx) {\n      // 绘制干扰点\n      for (let i = 0; i < 80; i++) {\n        ctx.fillStyle = this.randomColor(0, 255);\n        ctx.beginPath();\n        ctx.arc(\n          this.randomNum(0, this.contentWidth),\n          this.randomNum(0, this.contentHeight),\n          1,\n          0,\n          2 * Math.PI\n        );\n        ctx.fill();\n      }\n    },\n  },\n  watch: {\n    identifyCode() {\n      this.drawPic();\n    },\n  },\n  mounted() {\n    this.drawPic();\n  },\n};\n</script>\n \n<style scoped>\n.s-canvas {\n  /*height: 100%;*/\n  /*width: 100%;*/\n}\n.s-canvas canvas {\n  margin-top: 3px;\n  /*margin-left: 8px;*/\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}