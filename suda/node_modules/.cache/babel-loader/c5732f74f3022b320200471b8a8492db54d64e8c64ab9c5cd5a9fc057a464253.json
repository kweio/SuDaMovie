{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.push.js\");\nconst path = require('path');\nconst pathKey = require('path-key');\nmodule.exports = opts => {\n  opts = Object.assign({\n    cwd: process.cwd(),\n    path: process.env[pathKey()]\n  }, opts);\n  let prev;\n  let pth = path.resolve(opts.cwd);\n  const ret = [];\n  while (prev !== pth) {\n    ret.push(path.join(pth, 'node_modules/.bin'));\n    prev = pth;\n    pth = path.resolve(pth, '..');\n  }\n\n  // ensure the running `node` binary is used\n  ret.push(path.dirname(process.execPath));\n  return ret.concat(opts.path).join(path.delimiter);\n};\nmodule.exports.env = opts => {\n  opts = Object.assign({\n    env: process.env\n  }, opts);\n  const env = Object.assign({}, opts.env);\n  const path = pathKey({\n    env\n  });\n  opts.path = env[path];\n  env[path] = module.exports(opts);\n  return env;\n};","map":{"version":3,"names":["path","require","pathKey","module","exports","opts","Object","assign","cwd","process","env","prev","pth","resolve","ret","push","join","dirname","execPath","concat","delimiter"],"sources":["D:/WebSpace/SuDaMovie/suda/node_modules/npm-run-path/index.js"],"sourcesContent":["'use strict';\nconst path = require('path');\nconst pathKey = require('path-key');\n\nmodule.exports = opts => {\n\topts = Object.assign({\n\t\tcwd: process.cwd(),\n\t\tpath: process.env[pathKey()]\n\t}, opts);\n\n\tlet prev;\n\tlet pth = path.resolve(opts.cwd);\n\tconst ret = [];\n\n\twhile (prev !== pth) {\n\t\tret.push(path.join(pth, 'node_modules/.bin'));\n\t\tprev = pth;\n\t\tpth = path.resolve(pth, '..');\n\t}\n\n\t// ensure the running `node` binary is used\n\tret.push(path.dirname(process.execPath));\n\n\treturn ret.concat(opts.path).join(path.delimiter);\n};\n\nmodule.exports.env = opts => {\n\topts = Object.assign({\n\t\tenv: process.env\n\t}, opts);\n\n\tconst env = Object.assign({}, opts.env);\n\tconst path = pathKey({env});\n\n\topts.path = env[path];\n\tenv[path] = module.exports(opts);\n\n\treturn env;\n};\n"],"mappings":"AAAA,YAAY;;AAAC;AACb,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMC,OAAO,GAAGD,OAAO,CAAC,UAAU,CAAC;AAEnCE,MAAM,CAACC,OAAO,GAAGC,IAAI,IAAI;EACxBA,IAAI,GAAGC,MAAM,CAACC,MAAM,CAAC;IACpBC,GAAG,EAAEC,OAAO,CAACD,GAAG,EAAE;IAClBR,IAAI,EAAES,OAAO,CAACC,GAAG,CAACR,OAAO,EAAE;EAC5B,CAAC,EAAEG,IAAI,CAAC;EAER,IAAIM,IAAI;EACR,IAAIC,GAAG,GAAGZ,IAAI,CAACa,OAAO,CAACR,IAAI,CAACG,GAAG,CAAC;EAChC,MAAMM,GAAG,GAAG,EAAE;EAEd,OAAOH,IAAI,KAAKC,GAAG,EAAE;IACpBE,GAAG,CAACC,IAAI,CAACf,IAAI,CAACgB,IAAI,CAACJ,GAAG,EAAE,mBAAmB,CAAC,CAAC;IAC7CD,IAAI,GAAGC,GAAG;IACVA,GAAG,GAAGZ,IAAI,CAACa,OAAO,CAACD,GAAG,EAAE,IAAI,CAAC;EAC9B;;EAEA;EACAE,GAAG,CAACC,IAAI,CAACf,IAAI,CAACiB,OAAO,CAACR,OAAO,CAACS,QAAQ,CAAC,CAAC;EAExC,OAAOJ,GAAG,CAACK,MAAM,CAACd,IAAI,CAACL,IAAI,CAAC,CAACgB,IAAI,CAAChB,IAAI,CAACoB,SAAS,CAAC;AAClD,CAAC;AAEDjB,MAAM,CAACC,OAAO,CAACM,GAAG,GAAGL,IAAI,IAAI;EAC5BA,IAAI,GAAGC,MAAM,CAACC,MAAM,CAAC;IACpBG,GAAG,EAAED,OAAO,CAACC;EACd,CAAC,EAAEL,IAAI,CAAC;EAER,MAAMK,GAAG,GAAGJ,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEF,IAAI,CAACK,GAAG,CAAC;EACvC,MAAMV,IAAI,GAAGE,OAAO,CAAC;IAACQ;EAAG,CAAC,CAAC;EAE3BL,IAAI,CAACL,IAAI,GAAGU,GAAG,CAACV,IAAI,CAAC;EACrBU,GAAG,CAACV,IAAI,CAAC,GAAGG,MAAM,CAACC,OAAO,CAACC,IAAI,CAAC;EAEhC,OAAOK,GAAG;AACX,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}