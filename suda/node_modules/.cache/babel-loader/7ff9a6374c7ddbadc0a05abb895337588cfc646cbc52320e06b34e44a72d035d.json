{"ast":null,"code":"const ora = require('ora');\nconst chalk = require('chalk');\nconst spinner = ora();\nlet lastMsg = null;\nlet isPaused = false;\nexports.logWithSpinner = (symbol, msg) => {\n  if (!msg) {\n    msg = symbol;\n    symbol = chalk.green('✔');\n  }\n  if (lastMsg) {\n    spinner.stopAndPersist({\n      symbol: lastMsg.symbol,\n      text: lastMsg.text\n    });\n  }\n  spinner.text = ' ' + msg;\n  lastMsg = {\n    symbol: symbol + ' ',\n    text: msg\n  };\n  spinner.start();\n};\nexports.stopSpinner = persist => {\n  if (!spinner.isSpinning) {\n    return;\n  }\n  if (lastMsg && persist !== false) {\n    spinner.stopAndPersist({\n      symbol: lastMsg.symbol,\n      text: lastMsg.text\n    });\n  } else {\n    spinner.stop();\n  }\n  lastMsg = null;\n};\nexports.pauseSpinner = () => {\n  if (spinner.isSpinning) {\n    spinner.stop();\n    isPaused = true;\n  }\n};\nexports.resumeSpinner = () => {\n  if (isPaused) {\n    spinner.start();\n    isPaused = false;\n  }\n};\nexports.failSpinner = text => {\n  spinner.fail(text);\n};\n\n// silent all logs except errors during tests and keep record\nif (process.env.VUE_CLI_TEST) {\n  require('./_silence')('spinner', exports);\n}","map":{"version":3,"names":["ora","require","chalk","spinner","lastMsg","isPaused","exports","logWithSpinner","symbol","msg","green","stopAndPersist","text","start","stopSpinner","persist","isSpinning","stop","pauseSpinner","resumeSpinner","failSpinner","fail","process","env","VUE_CLI_TEST"],"sources":["D:/WebSpace/SuDaMovie/suda/node_modules/@vue/cli-shared-utils/lib/spinner.js"],"sourcesContent":["const ora = require('ora')\nconst chalk = require('chalk')\n\nconst spinner = ora()\nlet lastMsg = null\nlet isPaused = false\n\nexports.logWithSpinner = (symbol, msg) => {\n  if (!msg) {\n    msg = symbol\n    symbol = chalk.green('✔')\n  }\n  if (lastMsg) {\n    spinner.stopAndPersist({\n      symbol: lastMsg.symbol,\n      text: lastMsg.text\n    })\n  }\n  spinner.text = ' ' + msg\n  lastMsg = {\n    symbol: symbol + ' ',\n    text: msg\n  }\n  spinner.start()\n}\n\nexports.stopSpinner = (persist) => {\n  if (!spinner.isSpinning) {\n    return\n  }\n\n  if (lastMsg && persist !== false) {\n    spinner.stopAndPersist({\n      symbol: lastMsg.symbol,\n      text: lastMsg.text\n    })\n  } else {\n    spinner.stop()\n  }\n  lastMsg = null\n}\n\nexports.pauseSpinner = () => {\n  if (spinner.isSpinning) {\n    spinner.stop()\n    isPaused = true\n  }\n}\n\nexports.resumeSpinner = () => {\n  if (isPaused) {\n    spinner.start()\n    isPaused = false\n  }\n}\n\nexports.failSpinner = (text) => {\n  spinner.fail(text)\n}\n\n// silent all logs except errors during tests and keep record\nif (process.env.VUE_CLI_TEST) {\n  require('./_silence')('spinner', exports)\n}\n"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,KAAK,CAAC;AAC1B,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAO,CAAC;AAE9B,MAAME,OAAO,GAAGH,GAAG,EAAE;AACrB,IAAII,OAAO,GAAG,IAAI;AAClB,IAAIC,QAAQ,GAAG,KAAK;AAEpBC,OAAO,CAACC,cAAc,GAAG,CAACC,MAAM,EAAEC,GAAG,KAAK;EACxC,IAAI,CAACA,GAAG,EAAE;IACRA,GAAG,GAAGD,MAAM;IACZA,MAAM,GAAGN,KAAK,CAACQ,KAAK,CAAC,GAAG,CAAC;EAC3B;EACA,IAAIN,OAAO,EAAE;IACXD,OAAO,CAACQ,cAAc,CAAC;MACrBH,MAAM,EAAEJ,OAAO,CAACI,MAAM;MACtBI,IAAI,EAAER,OAAO,CAACQ;IAChB,CAAC,CAAC;EACJ;EACAT,OAAO,CAACS,IAAI,GAAG,GAAG,GAAGH,GAAG;EACxBL,OAAO,GAAG;IACRI,MAAM,EAAEA,MAAM,GAAG,GAAG;IACpBI,IAAI,EAAEH;EACR,CAAC;EACDN,OAAO,CAACU,KAAK,EAAE;AACjB,CAAC;AAEDP,OAAO,CAACQ,WAAW,GAAIC,OAAO,IAAK;EACjC,IAAI,CAACZ,OAAO,CAACa,UAAU,EAAE;IACvB;EACF;EAEA,IAAIZ,OAAO,IAAIW,OAAO,KAAK,KAAK,EAAE;IAChCZ,OAAO,CAACQ,cAAc,CAAC;MACrBH,MAAM,EAAEJ,OAAO,CAACI,MAAM;MACtBI,IAAI,EAAER,OAAO,CAACQ;IAChB,CAAC,CAAC;EACJ,CAAC,MAAM;IACLT,OAAO,CAACc,IAAI,EAAE;EAChB;EACAb,OAAO,GAAG,IAAI;AAChB,CAAC;AAEDE,OAAO,CAACY,YAAY,GAAG,MAAM;EAC3B,IAAIf,OAAO,CAACa,UAAU,EAAE;IACtBb,OAAO,CAACc,IAAI,EAAE;IACdZ,QAAQ,GAAG,IAAI;EACjB;AACF,CAAC;AAEDC,OAAO,CAACa,aAAa,GAAG,MAAM;EAC5B,IAAId,QAAQ,EAAE;IACZF,OAAO,CAACU,KAAK,EAAE;IACfR,QAAQ,GAAG,KAAK;EAClB;AACF,CAAC;AAEDC,OAAO,CAACc,WAAW,GAAIR,IAAI,IAAK;EAC9BT,OAAO,CAACkB,IAAI,CAACT,IAAI,CAAC;AACpB,CAAC;;AAED;AACA,IAAIU,OAAO,CAACC,GAAG,CAACC,YAAY,EAAE;EAC5BvB,OAAO,CAAC,YAAY,CAAC,CAAC,SAAS,EAAEK,OAAO,CAAC;AAC3C"},"metadata":{},"sourceType":"script","externalDependencies":[]}