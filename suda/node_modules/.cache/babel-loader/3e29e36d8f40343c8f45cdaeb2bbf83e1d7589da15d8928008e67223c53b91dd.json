{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n// @ts-check\nconst {\n  warn\n} = require('./logger');\n\n/** @typedef {{after?: string|Array<string>}} Apply */\n/** @typedef {{id: string, apply: Apply}} Plugin */\n/** @typedef {{after: Set<string>}} OrderParams */\n\n/** @type {Map<string, OrderParams>} */\nconst orderParamsCache = new Map();\n\n/**\n *\n * @param {Plugin} plugin\n * @returns {OrderParams}\n */\nfunction getOrderParams(plugin) {\n  if (!process.env.VUE_CLI_TEST && orderParamsCache.has(plugin.id)) {\n    return orderParamsCache.get(plugin.id);\n  }\n  const apply = plugin.apply;\n  let after = new Set();\n  if (typeof apply.after === 'string') {\n    after = new Set([apply.after]);\n  } else if (Array.isArray(apply.after)) {\n    after = new Set(apply.after);\n  }\n  if (!process.env.VUE_CLI_TEST) {\n    orderParamsCache.set(plugin.id, {\n      after\n    });\n  }\n  return {\n    after\n  };\n}\n\n/**\n * See leetcode 210\n * @param {Array<Plugin>} plugins\n * @returns {Array<Plugin>}\n */\nfunction topologicalSorting(plugins) {\n  /** @type {Map<string, Plugin>} */\n  const pluginsMap = new Map(plugins.map(p => [p.id, p]));\n\n  /** @type {Map<Plugin, number>} */\n  const indegrees = new Map();\n\n  /** @type {Map<Plugin, Array<Plugin>>} */\n  const graph = new Map();\n  plugins.forEach(p => {\n    const after = getOrderParams(p).after;\n    indegrees.set(p, after.size);\n    if (after.size === 0) return;\n    for (const id of after) {\n      const prerequisite = pluginsMap.get(id);\n      // remove invalid data\n      if (!prerequisite) {\n        indegrees.set(p, indegrees.get(p) - 1);\n        continue;\n      }\n      if (!graph.has(prerequisite)) {\n        graph.set(prerequisite, []);\n      }\n      graph.get(prerequisite).push(p);\n    }\n  });\n  const res = [];\n  const queue = [];\n  indegrees.forEach((d, p) => {\n    if (d === 0) queue.push(p);\n  });\n  while (queue.length) {\n    const cur = queue.shift();\n    res.push(cur);\n    const neighbors = graph.get(cur);\n    if (!neighbors) continue;\n    neighbors.forEach(n => {\n      const degree = indegrees.get(n) - 1;\n      indegrees.set(n, degree);\n      if (degree === 0) {\n        queue.push(n);\n      }\n    });\n  }\n  const valid = res.length === plugins.length;\n  if (!valid) {\n    warn(`No proper plugin execution order found.`);\n    return plugins;\n  }\n  return res;\n}\n\n/**\n * Arrange plugins by 'after' property.\n * @param {Array<Plugin>} plugins\n * @returns {Array<Plugin>}\n */\nfunction sortPlugins(plugins) {\n  if (plugins.length < 2) return plugins;\n  return topologicalSorting(plugins);\n}\nmodule.exports = {\n  topologicalSorting,\n  sortPlugins\n};","map":{"version":3,"names":["warn","require","orderParamsCache","Map","getOrderParams","plugin","process","env","VUE_CLI_TEST","has","id","get","apply","after","Set","Array","isArray","set","topologicalSorting","plugins","pluginsMap","map","p","indegrees","graph","forEach","size","prerequisite","push","res","queue","d","length","cur","shift","neighbors","n","degree","valid","sortPlugins","module","exports"],"sources":["D:/WebSpace/SuDaMovie/suda/node_modules/@vue/cli-shared-utils/lib/pluginOrder.js"],"sourcesContent":["// @ts-check\nconst { warn } = require('./logger')\n\n/** @typedef {{after?: string|Array<string>}} Apply */\n/** @typedef {{id: string, apply: Apply}} Plugin */\n/** @typedef {{after: Set<string>}} OrderParams */\n\n/** @type {Map<string, OrderParams>} */\nconst orderParamsCache = new Map()\n\n/**\n *\n * @param {Plugin} plugin\n * @returns {OrderParams}\n */\nfunction getOrderParams (plugin) {\n  if (!process.env.VUE_CLI_TEST && orderParamsCache.has(plugin.id)) {\n    return orderParamsCache.get(plugin.id)\n  }\n  const apply = plugin.apply\n\n  let after = new Set()\n  if (typeof apply.after === 'string') {\n    after = new Set([apply.after])\n  } else if (Array.isArray(apply.after)) {\n    after = new Set(apply.after)\n  }\n  if (!process.env.VUE_CLI_TEST) {\n    orderParamsCache.set(plugin.id, { after })\n  }\n\n  return { after }\n}\n\n/**\n * See leetcode 210\n * @param {Array<Plugin>} plugins\n * @returns {Array<Plugin>}\n */\nfunction topologicalSorting (plugins) {\n  /** @type {Map<string, Plugin>} */\n  const pluginsMap = new Map(plugins.map(p => [p.id, p]))\n\n  /** @type {Map<Plugin, number>} */\n  const indegrees = new Map()\n\n  /** @type {Map<Plugin, Array<Plugin>>} */\n  const graph = new Map()\n\n  plugins.forEach(p => {\n    const after = getOrderParams(p).after\n    indegrees.set(p, after.size)\n    if (after.size === 0) return\n    for (const id of after) {\n      const prerequisite = pluginsMap.get(id)\n      // remove invalid data\n      if (!prerequisite) {\n        indegrees.set(p, indegrees.get(p) - 1)\n        continue\n      }\n\n      if (!graph.has(prerequisite)) {\n        graph.set(prerequisite, [])\n      }\n      graph.get(prerequisite).push(p)\n    }\n  })\n\n  const res = []\n  const queue = []\n  indegrees.forEach((d, p) => {\n    if (d === 0) queue.push(p)\n  })\n  while (queue.length) {\n    const cur = queue.shift()\n    res.push(cur)\n    const neighbors = graph.get(cur)\n    if (!neighbors) continue\n\n    neighbors.forEach(n => {\n      const degree = indegrees.get(n) - 1\n      indegrees.set(n, degree)\n      if (degree === 0) {\n        queue.push(n)\n      }\n    })\n  }\n  const valid = res.length === plugins.length\n  if (!valid) {\n    warn(`No proper plugin execution order found.`)\n    return plugins\n  }\n  return res\n}\n\n/**\n * Arrange plugins by 'after' property.\n * @param {Array<Plugin>} plugins\n * @returns {Array<Plugin>}\n */\nfunction sortPlugins (plugins) {\n  if (plugins.length < 2) return plugins\n\n  return topologicalSorting(plugins)\n}\n\nmodule.exports = {\n  topologicalSorting,\n  sortPlugins\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}